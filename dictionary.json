{
    "alphabet": [
        "",
        "#",
        "#i",
        "#if",
        "#ifn",
        "#ifnd",
        "#ifnde",
        "#ifndef",
        "#ifndef ",
        "#ifndef D",
        "#ifndef DI",
        "#ifndef DIC",
        "#ifndef DICT",
        "#ifndef DICTI",
        "#ifndef DICTIO",
        "#ifndef DICTION",
        "#ifndef DICTIONA",
        "#ifndef DICTIONAR",
        "#ifndef DICTIONARY",
        "#ifndef DICTIONARY_",
        "#ifndef DICTIONARY_S",
        "#ifndef DICTIONARY_SH",
        "#ifndef DICTIONARY_SHE",
        "#ifndef DICTIONARY_SHEL",
        "#ifndef DICTIONARY_SHELL",
        "#ifndef DICTIONARY_SHELL_",
        "#d",
        "#de",
        "#def",
        "#defi",
        "#defin",
        "#define",
        "#define ",
        "#define D",
        "#define DI",
        "#define DIC",
        "#define DICT",
        "#define DICTI",
        "#define DICTIO",
        "#define DICTION",
        "#define DICTIONA",
        "#define DICTIONAR",
        "#define DICTIONARY",
        "#define DICTIONARY_",
        "#define DICTIONARY_S",
        "#define DICTIONARY_SH",
        "#define DICTIONARY_SHE",
        "#define DICTIONARY_SHEL",
        "#define DICTIONARY_SHELL",
        "#define DICTIONARY_SHELL_",
        "#in",
        "#inc",
        "#incl",
        "#inclu",
        "#includ",
        "#include",
        "#include ",
        "#include \"",
        "#include \"W",
        "#include \"Wo",
        "#include \"Woo",
        "#include \"Woor",
        "#include \"Woord",
        "#include \"Woorde",
        "#include \"Woorden",
        "#include \"Woordenb",
        "#include \"Woordenbo",
        "#include \"Woordenboe",
        "#include \"Woordenboek",
        "#include \"Woordenboek.",
        "#include \"Woordenboek.h",
        "#include <",
        "#include <i",
        "#include <io",
        "#include <ios",
        "#include <iost",
        "#include <iostr",
        "#include <iostre",
        "#include <iostrea",
        "#include <iostream",
        "#include <e",
        "#include <ex",
        "#include <exc",
        "#include <exce",
        "#include <excep",
        "#include <except",
        "#include <excepti",
        "#include <exceptio",
        "#include <exception",
        "#include <s",
        "#include <st",
        "#include <str",
        "#include <stri",
        "#include <strin",
        "#include <string",
        "#include <v",
        "#include <ve",
        "#include <vec",
        "#include <vect",
        "#include <vecto",
        "#include <vector",
        "c",
        "cl",
        "cla",
        "clas",
        "class",
        "class ",
        "class S",
        "class Sh",
        "class She",
        "class Shel",
        "class Shell",
        "class Shell ",
        " ",
        "  ",
        "   ",
        "    ",
        "    b",
        "    bo",
        "    boo",
        "    bool",
        "    bool ",
        "    bool r",
        "    bool ru",
        "    bool run",
        "    bool runn",
        "    bool runni",
        "    bool runnin",
        "    bool running",
        "    s",
        "    st",
        "    std",
        "    std:",
        "    std::",
        "    std::s",
        "    std::st",
        "    std::str",
        "    std::stri",
        "    std::strin",
        "    std::string",
        "    std::string ",
        "    std::string p",
        "    std::string pr",
        "    std::string pro",
        "    std::string prom",
        "    std::string promp",
        "    std::string prompt",
        "    W",
        "    Wo",
        "    Woo",
        "    Woor",
        "    Woord",
        "    Woorde",
        "    Woorden",
        "    Woordenb",
        "    Woordenbo",
        "    Woordenboe",
        "    Woordenboek",
        "    Woordenboek*",
        "    Woordenboek* ",
        "    Woordenboek* d",
        "    Woordenboek* di",
        "    Woordenboek* dic",
        "    Woordenboek* dict",
        "    Woordenboek* dicti",
        "    Woordenboek* dictio",
        "    Woordenboek* diction",
        "    Woordenboek* dictiona",
        "    Woordenboek* dictionar",
        "    Woordenboek* dictionary",
        "p",
        "pu",
        "pub",
        "publ",
        "publi",
        "public",
        "    /",
        "    /*",
        "     ",
        "     *",
        "     * ",
        "     * \\",
        "     * \\b",
        "     * \\br",
        "     * \\bri",
        "     * \\brie",
        "     * \\brief",
        "     * \\brief ",
        "     * \\brief C",
        "     * \\brief Co",
        "     * \\brief Con",
        "     * \\brief Cons",
        "     * \\brief Const",
        "     * \\brief Constr",
        "     * \\brief Constru",
        "     * \\brief Construc",
        "     * \\brief Construct",
        "     * \\brief Constructo",
        "     * \\brief Constructor",
        "     * \\brief Constructor ",
        "     * \\brief Constructor f",
        "     * \\brief Constructor fo",
        "     * \\brief Constructor for",
        "     * \\brief Constructor for ",
        "     * \\brief Constructor for t",
        "     * \\brief Constructor for th",
        "     * \\brief Constructor for the",
        "     * \\brief Constructor for the ",
        "     * \\brief Constructor for the i",
        "     * \\brief Constructor for the in",
        "     * \\brief Constructor for the int",
        "     * \\brief Constructor for the inte",
        "     * \\brief Constructor for the inter",
        "     * \\brief Constructor for the intera",
        "     * \\brief Constructor for the interac",
        "     * \\brief Constructor for the interact",
        "     * \\brief Constructor for the interacti",
        "     * \\brief Constructor for the interactiv",
        "     * \\brief Constructor for the interactive",
        "     * \\brief Constructor for the interactive ",
        "     * \\brief Constructor for the interactive d",
        "     * \\brief Constructor for the interactive di",
        "     * \\brief Constructor for the interactive dic",
        "     * \\brief Constructor for the interactive dict",
        "     * \\brief Constructor for the interactive dicti",
        "     * \\brief Constructor for the interactive dictio",
        "     * \\brief Constructor for the interactive diction",
        "     * \\brief Constructor for the interactive dictiona",
        "     * \\brief Constructor for the interactive dictionar",
        "     * \\brief Constructor for the interactive dictionary",
        "     * \\brief Constructor for the interactive dictionary ",
        "     * \\brief Constructor for the interactive dictionary s",
        "     * \\brief Constructor for the interactive dictionary sh",
        "     * \\brief Constructor for the interactive dictionary she",
        "     * \\brief Constructor for the interactive dictionary shel",
        "     * \\a",
        "     * \\au",
        "     * \\aut",
        "     * \\auth",
        "     * \\autho",
        "     * \\author",
        "     * \\author ",
        "     * \\author L",
        "     * \\author La",
        "     * \\author Lau",
        "     * \\author Laur",
        "     * \\author Laure",
        "     * \\author Lauren",
        "     * \\author Laurens",
        "     * \\author Laurens ",
        "     * \\author Laurens D",
        "     * \\author Laurens De",
        "     * \\author Laurens De ",
        "     * \\author Laurens De W",
        "     * \\author Laurens De Wa",
        "     * \\author Laurens De Wac",
        "     * \\author Laurens De Wach",
        "     * \\author Laurens De Wacht",
        "     * \\author Laurens De Wachte",
        "    S",
        "    Sh",
        "    She",
        "    Shel",
        "    Shell",
        "    Shell(",
        "    Shell()",
        "     * \\brief D",
        "     * \\brief De",
        "     * \\brief Des",
        "     * \\brief Dest",
        "     * \\brief Destr",
        "     * \\brief Destru",
        "     * \\brief Destruc",
        "     * \\brief Destruct",
        "     * \\brief Destructo",
        "     * \\brief Destructor",
        "     * \\brief Destructor ",
        "     * \\brief Destructor f",
        "     * \\brief Destructor fo",
        "     * \\brief Destructor for",
        "     * \\brief Destructor for ",
        "     * \\brief Destructor for t",
        "     * \\brief Destructor for th",
        "     * \\brief Destructor for the",
        "     * \\brief Destructor for the ",
        "     * \\brief Destructor for the i",
        "     * \\brief Destructor for the in",
        "     * \\brief Destructor for the int",
        "     * \\brief Destructor for the inte",
        "     * \\brief Destructor for the inter",
        "     * \\brief Destructor for the intera",
        "     * \\brief Destructor for the interac",
        "     * \\brief Destructor for the interact",
        "     * \\brief Destructor for the interacti",
        "     * \\brief Destructor for the interactiv",
        "     * \\brief Destructor for the interactive",
        "     * \\brief Destructor for the interactive ",
        "     * \\brief Destructor for the interactive d",
        "     * \\brief Destructor for the interactive di",
        "     * \\brief Destructor for the interactive dic",
        "     * \\brief Destructor for the interactive dict",
        "     * \\brief Destructor for the interactive dicti",
        "     * \\brief Destructor for the interactive dictio",
        "     * \\brief Destructor for the interactive diction",
        "     * \\brief Destructor for the interactive dictiona",
        "     * \\brief Destructor for the interactive dictionar",
        "     * \\brief Destructor for the interactive dictionary",
        "     * \\brief Destructor for the interactive dictionary ",
        "     * \\brief Destructor for the interactive dictionary s",
        "     * \\brief Destructor for the interactive dictionary sh",
        "     * \\brief Destructor for the interactive dictionary she",
        "     * \\brief Destructor for the interactive dictionary shel",
        "    ~",
        "    ~S",
        "    ~Sh",
        "    ~She",
        "    ~Shel",
        "    ~Shell",
        "    ~Shell(",
        "    ~Shell()",
        "    ~Shell() ",
        "    ~Shell() =",
        "    ~Shell() = ",
        "    ~Shell() = d",
        "    ~Shell() = de",
        "    ~Shell() = def",
        "    ~Shell() = defa",
        "    ~Shell() = defau",
        "    ~Shell() = defaul",
        "    ~Shell() = default",
        "     * \\brief L",
        "     * \\brief La",
        "     * \\brief Lau",
        "     * \\brief Laun",
        "     * \\brief Launc",
        "     * \\brief Launch",
        "     * \\brief Launche",
        "     * \\brief Launches",
        "     * \\brief Launches ",
        "     * \\brief Launches t",
        "     * \\brief Launches th",
        "     * \\brief Launches the",
        "     * \\brief Launches the ",
        "     * \\brief Launches the i",
        "     * \\brief Launches the in",
        "     * \\brief Launches the int",
        "     * \\brief Launches the inte",
        "     * \\brief Launches the inter",
        "     * \\brief Launches the intera",
        "     * \\brief Launches the interac",
        "     * \\brief Launches the interact",
        "     * \\brief Launches the interacti",
        "     * \\brief Launches the interactiv",
        "     * \\brief Launches the interactive",
        "     * \\brief Launches the interactive ",
        "     * \\brief Launches the interactive d",
        "     * \\brief Launches the interactive di",
        "     * \\brief Launches the interactive dic",
        "     * \\brief Launches the interactive dict",
        "     * \\brief Launches the interactive dicti",
        "     * \\brief Launches the interactive dictio",
        "     * \\brief Launches the interactive diction",
        "     * \\brief Launches the interactive dictiona",
        "     * \\brief Launches the interactive dictionar",
        "     * \\brief Launches the interactive dictionary",
        "     * \\brief Launches the interactive dictionary ",
        "     * \\brief Launches the interactive dictionary s",
        "     * \\brief Launches the interactive dictionary sh",
        "     * \\brief Launches the interactive dictionary she",
        "     * \\brief Launches the interactive dictionary shel",
        "    v",
        "    vo",
        "    voi",
        "    void",
        "    void ",
        "    void l",
        "    void la",
        "    void lau",
        "    void laun",
        "    void launc",
        "    void launch",
        "    void launch(",
        "    void launch()",
        "pr",
        "pri",
        "priv",
        "priva",
        "privat",
        "private",
        "    void r",
        "    void ru",
        "    void run",
        "    void run_",
        "    void run_l",
        "    void run_li",
        "    void run_lin",
        "    void run_line",
        "    void run_line(",
        "    void run_line(s",
        "    void run_line(st",
        "    void run_line(std",
        "    void run_line(std:",
        "    void run_line(std::",
        "    void run_line(std::s",
        "    void run_line(std::st",
        "    void run_line(std::str",
        "    void run_line(std::stri",
        "    void run_line(std::strin",
        "    void run_line(std::string",
        "    void run_line(std::string ",
        "    void run_line(std::string &",
        "    void run_line(std::string &c",
        "    void run_line(std::string &cm",
        "    void run_line(std::string &cmd",
        "    void run_line(std::string &cmd)",
        "    void run_e",
        "    void run_ex",
        "    void run_exi",
        "    void run_exit",
        "    void run_exit(",
        "    void run_exit()",
        "    void run_h",
        "    void run_he",
        "    void run_hel",
        "    void run_help",
        "    void run_help(",
        "    void run_help()",
        "    void run_a",
        "    void run_ad",
        "    void run_add",
        "    void run_add(",
        "    void run_add(s",
        "    void run_add(st",
        "    void run_add(std",
        "    void run_add(std:",
        "    void run_add(std::",
        "    void run_add(std::v",
        "    void run_add(std::ve",
        "    void run_add(std::vec",
        "    void run_add(std::vect",
        "    void run_add(std::vecto",
        "    void run_add(std::vector",
        "    void run_add(std::vector<",
        "    void run_add(std::vector<s",
        "    void run_add(std::vector<st",
        "    void run_add(std::vector<std",
        "    void run_add(std::vector<std:",
        "    void run_add(std::vector<std::",
        "    void run_add(std::vector<std::s",
        "    void run_add(std::vector<std::st",
        "    void run_add(std::vector<std::str",
        "    void run_add(std::vector<std::stri",
        "    void run_add(std::vector<std::strin",
        "    void run_add(std::vector<std::string",
        "    void run_add(std::vector<std::string>",
        "    void run_add(std::vector<std::string> ",
        "    void run_add(std::vector<std::string> &",
        "    void run_add(std::vector<std::string> &a",
        "    void run_add(std::vector<std::string> &ar",
        "    void run_add(std::vector<std::string> &arg",
        "    void run_add(std::vector<std::string> &args",
        "    void run_add(std::vector<std::string> &args)",
        "    void run_r",
        "    void run_re",
        "    void run_rem",
        "    void run_remo",
        "    void run_remov",
        "    void run_remove",
        "    void run_remove(",
        "    void run_remove(s",
        "    void run_remove(st",
        "    void run_remove(std",
        "    void run_remove(std:",
        "    void run_remove(std::",
        "    void run_remove(std::v",
        "    void run_remove(std::ve",
        "    void run_remove(std::vec",
        "    void run_remove(std::vect",
        "    void run_remove(std::vecto",
        "    void run_remove(std::vector",
        "    void run_remove(std::vector<",
        "    void run_remove(std::vector<s",
        "    void run_remove(std::vector<st",
        "    void run_remove(std::vector<std",
        "    void run_remove(std::vector<std:",
        "    void run_remove(std::vector<std::",
        "    void run_remove(std::vector<std::s",
        "    void run_remove(std::vector<std::st",
        "    void run_remove(std::vector<std::str",
        "    void run_remove(std::vector<std::stri",
        "    void run_remove(std::vector<std::strin",
        "    void run_remove(std::vector<std::string",
        "    void run_remove(std::vector<std::string>",
        "    void run_remove(std::vector<std::string> ",
        "    void run_remove(std::vector<std::string> &",
        "    void run_remove(std::vector<std::string> &a",
        "    void run_remove(std::vector<std::string> &ar",
        "    void run_remove(std::vector<std::string> &arg",
        "    void run_remove(std::vector<std::string> &args",
        "    void run_remove(std::vector<std::string> &args)",
        "    void run_m",
        "    void run_mi",
        "    void run_min",
        "    void run_mini",
        "    void run_minim",
        "    void run_minimi",
        "    void run_minimiz",
        "    void run_minimize",
        "    void run_minimize(",
        "    void run_minimize(s",
        "    void run_minimize(st",
        "    void run_minimize(std",
        "    void run_minimize(std:",
        "    void run_minimize(std::",
        "    void run_minimize(std::v",
        "    void run_minimize(std::ve",
        "    void run_minimize(std::vec",
        "    void run_minimize(std::vect",
        "    void run_minimize(std::vecto",
        "    void run_minimize(std::vector",
        "    void run_minimize(std::vector<",
        "    void run_minimize(std::vector<s",
        "    void run_minimize(std::vector<st",
        "    void run_minimize(std::vector<std",
        "    void run_minimize(std::vector<std:",
        "    void run_minimize(std::vector<std::",
        "    void run_minimize(std::vector<std::s",
        "    void run_minimize(std::vector<std::st",
        "    void run_minimize(std::vector<std::str",
        "    void run_minimize(std::vector<std::stri",
        "    void run_minimize(std::vector<std::strin",
        "    void run_minimize(std::vector<std::string",
        "    void run_minimize(std::vector<std::string>",
        "    void run_minimize(std::vector<std::string> ",
        "    void run_minimize(std::vector<std::string> &",
        "    void run_minimize(std::vector<std::string> &a",
        "    void run_minimize(std::vector<std::string> &ar",
        "    void run_minimize(std::vector<std::string> &arg",
        "    void run_minimize(std::vector<std::string> &args",
        "    void run_minimize(std::vector<std::string> &args)",
        "    void run_c",
        "    void run_ch",
        "    void run_che",
        "    void run_chec",
        "    void run_check",
        "    void run_check_",
        "    void run_check_t",
        "    void run_check_te",
        "    void run_check_tex",
        "    void run_check_text",
        "    void run_check_text(",
        "    void run_check_text(s",
        "    void run_check_text(st",
        "    void run_check_text(std",
        "    void run_check_text(std:",
        "    void run_check_text(std::",
        "    void run_check_text(std::v",
        "    void run_check_text(std::ve",
        "    void run_check_text(std::vec",
        "    void run_check_text(std::vect",
        "    void run_check_text(std::vecto",
        "    void run_check_text(std::vector",
        "    void run_check_text(std::vector<",
        "    void run_check_text(std::vector<s",
        "    void run_check_text(std::vector<st",
        "    void run_check_text(std::vector<std",
        "    void run_check_text(std::vector<std:",
        "    void run_check_text(std::vector<std::",
        "    void run_check_text(std::vector<std::s",
        "    void run_check_text(std::vector<std::st",
        "    void run_check_text(std::vector<std::str",
        "    void run_check_text(std::vector<std::stri",
        "    void run_check_text(std::vector<std::strin",
        "    void run_check_text(std::vector<std::string",
        "    void run_check_text(std::vector<std::string>",
        "    void run_check_text(std::vector<std::string> ",
        "    void run_check_text(std::vector<std::string> &",
        "    void run_check_text(std::vector<std::string> &a",
        "    void run_check_text(std::vector<std::string> &ar",
        "    void run_check_text(std::vector<std::string> &arg",
        "    void run_check_text(std::vector<std::string> &args",
        "    void run_check_text(std::vector<std::string> &args)",
        "    void run_co",
        "    void run_com",
        "    void run_comb",
        "    void run_combi",
        "    void run_combin",
        "    void run_combine",
        "    void run_combine(",
        "    void run_combine(s",
        "    void run_combine(st",
        "    void run_combine(std",
        "    void run_combine(std:",
        "    void run_combine(std::",
        "    void run_combine(std::v",
        "    void run_combine(std::ve",
        "    void run_combine(std::vec",
        "    void run_combine(std::vect",
        "    void run_combine(std::vecto",
        "    void run_combine(std::vector",
        "    void run_combine(std::vector<",
        "    void run_combine(std::vector<s",
        "    void run_combine(std::vector<st",
        "    void run_combine(std::vector<std",
        "    void run_combine(std::vector<std:",
        "    void run_combine(std::vector<std::",
        "    void run_combine(std::vector<std::s",
        "    void run_combine(std::vector<std::st",
        "    void run_combine(std::vector<std::str",
        "    void run_combine(std::vector<std::stri",
        "    void run_combine(std::vector<std::strin",
        "    void run_combine(std::vector<std::string",
        "    void run_combine(std::vector<std::string>",
        "    void run_combine(std::vector<std::string> ",
        "    void run_combine(std::vector<std::string> &",
        "    void run_combine(std::vector<std::string> &a",
        "    void run_combine(std::vector<std::string> &ar",
        "    void run_combine(std::vector<std::string> &arg",
        "    void run_combine(std::vector<std::string> &args",
        "    void run_combine(std::vector<std::string> &args)",
        "    void run_le",
        "    void run_len",
        "    void run_leng",
        "    void run_lengt",
        "    void run_length",
        "    void run_length(",
        "    void run_length(s",
        "    void run_length(st",
        "    void run_length(std",
        "    void run_length(std:",
        "    void run_length(std::",
        "    void run_length(std::v",
        "    void run_length(std::ve",
        "    void run_length(std::vec",
        "    void run_length(std::vect",
        "    void run_length(std::vecto",
        "    void run_length(std::vector",
        "    void run_length(std::vector<",
        "    void run_length(std::vector<s",
        "    void run_length(std::vector<st",
        "    void run_length(std::vector<std",
        "    void run_length(std::vector<std:",
        "    void run_length(std::vector<std::",
        "    void run_length(std::vector<std::s",
        "    void run_length(std::vector<std::st",
        "    void run_length(std::vector<std::str",
        "    void run_length(std::vector<std::stri",
        "    void run_length(std::vector<std::strin",
        "    void run_length(std::vector<std::string",
        "    void run_length(std::vector<std::string>",
        "    void run_length(std::vector<std::string> ",
        "    void run_length(std::vector<std::string> &",
        "    void run_length(std::vector<std::string> &a",
        "    void run_length(std::vector<std::string> &ar",
        "    void run_length(std::vector<std::string> &arg",
        "    void run_length(std::vector<std::string> &args",
        "    void run_length(std::vector<std::string> &args)",
        "    void run_s",
        "    void run_su",
        "    void run_sug",
        "    void run_sugg",
        "    void run_sugge",
        "    void run_sugges",
        "    void run_suggest",
        "    void run_suggest(",
        "    void run_suggest(s",
        "    void run_suggest(st",
        "    void run_suggest(std",
        "    void run_suggest(std:",
        "    void run_suggest(std::",
        "    void run_suggest(std::v",
        "    void run_suggest(std::ve",
        "    void run_suggest(std::vec",
        "    void run_suggest(std::vect",
        "    void run_suggest(std::vecto",
        "    void run_suggest(std::vector",
        "    void run_suggest(std::vector<",
        "    void run_suggest(std::vector<s",
        "    void run_suggest(std::vector<st",
        "    void run_suggest(std::vector<std",
        "    void run_suggest(std::vector<std:",
        "    void run_suggest(std::vector<std::",
        "    void run_suggest(std::vector<std::s",
        "    void run_suggest(std::vector<std::st",
        "    void run_suggest(std::vector<std::str",
        "    void run_suggest(std::vector<std::stri",
        "    void run_suggest(std::vector<std::strin",
        "    void run_suggest(std::vector<std::string",
        "    void run_suggest(std::vector<std::string>",
        "    void run_suggest(std::vector<std::string> ",
        "    void run_suggest(std::vector<std::string> &",
        "    void run_suggest(std::vector<std::string> &a",
        "    void run_suggest(std::vector<std::string> &ar",
        "    void run_suggest(std::vector<std::string> &arg",
        "    void run_suggest(std::vector<std::string> &args",
        "    void run_suggest(std::vector<std::string> &args)",
        "    void run_w",
        "    void run_wo",
        "    void run_wor",
        "    void run_word",
        "    void run_wordl",
        "    void run_wordle",
        "    void run_wordle(",
        "    void run_wordle(s",
        "    void run_wordle(st",
        "    void run_wordle(std",
        "    void run_wordle(std:",
        "    void run_wordle(std::",
        "    void run_wordle(std::v",
        "    void run_wordle(std::ve",
        "    void run_wordle(std::vec",
        "    void run_wordle(std::vect",
        "    void run_wordle(std::vecto",
        "    void run_wordle(std::vector",
        "    void run_wordle(std::vector<",
        "    void run_wordle(std::vector<s",
        "    void run_wordle(std::vector<st",
        "    void run_wordle(std::vector<std",
        "    void run_wordle(std::vector<std:",
        "    void run_wordle(std::vector<std::",
        "    void run_wordle(std::vector<std::s",
        "    void run_wordle(std::vector<std::st",
        "    void run_wordle(std::vector<std::str",
        "    void run_wordle(std::vector<std::stri",
        "    void run_wordle(std::vector<std::strin",
        "    void run_wordle(std::vector<std::string",
        "    void run_wordle(std::vector<std::string>",
        "    void run_wordle(std::vector<std::string> ",
        "    void run_wordle(std::vector<std::string> &",
        "    void run_wordle(std::vector<std::string> &a",
        "    void run_wordle(std::vector<std::string> &ar",
        "    void run_wordle(std::vector<std::string> &arg",
        "    void run_wordle(std::vector<std::string> &args",
        "    void run_wordle(std::vector<std::string> &args)",
        "    void run_sa",
        "    void run_sav",
        "    void run_save",
        "    void run_save(",
        "    void run_save(s",
        "    void run_save(st",
        "    void run_save(std",
        "    void run_save(std:",
        "    void run_save(std::",
        "    void run_save(std::v",
        "    void run_save(std::ve",
        "    void run_save(std::vec",
        "    void run_save(std::vect",
        "    void run_save(std::vecto",
        "    void run_save(std::vector",
        "    void run_save(std::vector<",
        "    void run_save(std::vector<s",
        "    void run_save(std::vector<st",
        "    void run_save(std::vector<std",
        "    void run_save(std::vector<std:",
        "    void run_save(std::vector<std::",
        "    void run_save(std::vector<std::s",
        "    void run_save(std::vector<std::st",
        "    void run_save(std::vector<std::str",
        "    void run_save(std::vector<std::stri",
        "    void run_save(std::vector<std::strin",
        "    void run_save(std::vector<std::string",
        "    void run_save(std::vector<std::string>",
        "    void run_save(std::vector<std::string> ",
        "    void run_save(std::vector<std::string> &",
        "    void run_save(std::vector<std::string> &a",
        "    void run_save(std::vector<std::string> &ar",
        "    void run_save(std::vector<std::string> &arg",
        "    void run_save(std::vector<std::string> &args",
        "    void run_save(std::vector<std::string> &args)",
        "    void run_lo",
        "    void run_loa",
        "    void run_load",
        "    void run_load(",
        "    void run_load(s",
        "    void run_load(st",
        "    void run_load(std",
        "    void run_load(std:",
        "    void run_load(std::",
        "    void run_load(std::v",
        "    void run_load(std::ve",
        "    void run_load(std::vec",
        "    void run_load(std::vect",
        "    void run_load(std::vecto",
        "    void run_load(std::vector",
        "    void run_load(std::vector<",
        "    void run_load(std::vector<s",
        "    void run_load(std::vector<st",
        "    void run_load(std::vector<std",
        "    void run_load(std::vector<std:",
        "    void run_load(std::vector<std::",
        "    void run_load(std::vector<std::s",
        "    void run_load(std::vector<std::st",
        "    void run_load(std::vector<std::str",
        "    void run_load(std::vector<std::stri",
        "    void run_load(std::vector<std::strin",
        "    void run_load(std::vector<std::string",
        "    void run_load(std::vector<std::string>",
        "    void run_load(std::vector<std::string> ",
        "    void run_load(std::vector<std::string> &",
        "    void run_load(std::vector<std::string> &a",
        "    void run_load(std::vector<std::string> &ar",
        "    void run_load(std::vector<std::string> &arg",
        "    void run_load(std::vector<std::string> &args",
        "    void run_load(std::vector<std::string> &args)",
        "}",
        "b",
        "bo",
        "boo",
        "bool",
        "bool ",
        "bool F",
        "bool Fi",
        "bool Fil",
        "bool File",
        "bool FileE",
        "bool FileEx",
        "bool FileExi",
        "bool FileExis",
        "bool FileExist",
        "bool FileExists",
        "bool FileExists(",
        "bool FileExists(c",
        "bool FileExists(co",
        "bool FileExists(con",
        "bool FileExists(cons",
        "bool FileExists(const",
        "bool FileExists(const ",
        "bool FileExists(const s",
        "bool FileExists(const st",
        "bool FileExists(const std",
        "bool FileExists(const std:",
        "bool FileExists(const std::",
        "bool FileExists(const std::s",
        "bool FileExists(const std::st",
        "bool FileExists(const std::str",
        "bool FileExists(const std::stri",
        "bool FileExists(const std::strin",
        "bool FileExists(const std::string",
        "bool FileExists(const std::string ",
        "bool FileExists(const std::string &",
        "bool FileExists(const std::string &f",
        "bool FileExists(const std::string &fi",
        "bool FileExists(const std::string &fil",
        "bool FileExists(const std::string &file",
        "bool FileExists(const std::string &filen",
        "bool FileExists(const std::string &filena",
        "bool FileExists(const std::string &filenam",
        "bool FileExists(const std::string &filename",
        "bool FileExists(const std::string &filename)",
        "bool c",
        "bool co",
        "bool con",
        "bool cont",
        "bool conta",
        "bool contai",
        "bool contain",
        "bool contains",
        "bool containsO",
        "bool containsOn",
        "bool containsOnl",
        "bool containsOnly",
        "bool containsOnlyL",
        "bool containsOnlyLe",
        "bool containsOnlyLet",
        "bool containsOnlyLett",
        "bool containsOnlyLette",
        "bool containsOnlyLetter",
        "bool containsOnlyLetters",
        "bool containsOnlyLetters(",
        "bool containsOnlyLetters(s",
        "bool containsOnlyLetters(st",
        "bool containsOnlyLetters(std",
        "bool containsOnlyLetters(std:",
        "bool containsOnlyLetters(std::",
        "bool containsOnlyLetters(std::s",
        "bool containsOnlyLetters(std::st",
        "bool containsOnlyLetters(std::str",
        "bool containsOnlyLetters(std::stri",
        "bool containsOnlyLetters(std::strin",
        "bool containsOnlyLetters(std::string",
        "bool containsOnlyLetters(std::string ",
        "bool containsOnlyLetters(std::string c",
        "bool containsOnlyLetters(std::string co",
        "bool containsOnlyLetters(std::string con",
        "bool containsOnlyLetters(std::string cons",
        "bool containsOnlyLetters(std::string const",
        "bool containsOnlyLetters(std::string const ",
        "bool containsOnlyLetters(std::string const &",
        "bool containsOnlyLetters(std::string const &s",
        "bool containsOnlyLetters(std::string const &st",
        "bool containsOnlyLetters(std::string const &str",
        "bool containsOnlyLetters(std::string const &str)",
        "bool i",
        "bool is",
        "bool isN",
        "bool isNu",
        "bool isNum",
        "bool isNumb",
        "bool isNumbe",
        "bool isNumber",
        "bool isNumber(",
        "bool isNumber(c",
        "bool isNumber(co",
        "bool isNumber(con",
        "bool isNumber(cons",
        "bool isNumber(const",
        "bool isNumber(const ",
        "bool isNumber(const s",
        "bool isNumber(const st",
        "bool isNumber(const str",
        "bool isNumber(const stri",
        "bool isNumber(const strin",
        "bool isNumber(const string",
        "bool isNumber(const string ",
        "bool isNumber(const string &",
        "bool isNumber(const string &s",
        "bool isNumber(const string &st",
        "bool isNumber(const string &str",
        "bool isNumber(const string &str)",
        "#e",
        "#en",
        "#end",
        "#endi"
    ],
    "states": [
        {
            "name": " ",
            "starting": false
        },
        {
            "name": "  ",
            "starting": false
        },
        {
            "name": "   ",
            "starting": false
        },
        {
            "name": "    ",
            "starting": false
        },
        {
            "name": "     ",
            "starting": false
        },
        {
            "name": "     *",
            "starting": false
        },
        {
            "name": "     * ",
            "starting": false
        },
        {
            "name": "     * \\",
            "starting": false
        },
        {
            "name": "     * \\a",
            "starting": false
        },
        {
            "name": "     * \\au",
            "starting": false
        },
        {
            "name": "     * \\aut",
            "starting": false
        },
        {
            "name": "     * \\auth",
            "starting": false
        },
        {
            "name": "     * \\autho",
            "starting": false
        },
        {
            "name": "     * \\author",
            "starting": false
        },
        {
            "name": "     * \\author ",
            "starting": false
        },
        {
            "name": "     * \\author L",
            "starting": false
        },
        {
            "name": "     * \\author La",
            "starting": false
        },
        {
            "name": "     * \\author Lau",
            "starting": false
        },
        {
            "name": "     * \\author Laur",
            "starting": false
        },
        {
            "name": "     * \\author Laure",
            "starting": false
        },
        {
            "name": "     * \\author Lauren",
            "starting": false
        },
        {
            "name": "     * \\author Laurens",
            "starting": false
        },
        {
            "name": "     * \\author Laurens ",
            "starting": false
        },
        {
            "name": "     * \\author Laurens D",
            "starting": false
        },
        {
            "name": "     * \\author Laurens De",
            "starting": false
        },
        {
            "name": "     * \\author Laurens De ",
            "starting": false
        },
        {
            "name": "     * \\author Laurens De W",
            "starting": false
        },
        {
            "name": "     * \\author Laurens De Wa",
            "starting": false
        },
        {
            "name": "     * \\author Laurens De Wac",
            "starting": false
        },
        {
            "name": "     * \\author Laurens De Wach",
            "starting": false
        },
        {
            "name": "     * \\author Laurens De Wacht",
            "starting": false
        },
        {
            "name": "     * \\author Laurens De Wachte",
            "starting": false
        },
        {
            "name": "     * \\b",
            "starting": false
        },
        {
            "name": "     * \\br",
            "starting": false
        },
        {
            "name": "     * \\bri",
            "starting": false
        },
        {
            "name": "     * \\brie",
            "starting": false
        },
        {
            "name": "     * \\brief",
            "starting": false
        },
        {
            "name": "     * \\brief ",
            "starting": false
        },
        {
            "name": "     * \\brief C",
            "starting": false
        },
        {
            "name": "     * \\brief Co",
            "starting": false
        },
        {
            "name": "     * \\brief Con",
            "starting": false
        },
        {
            "name": "     * \\brief Cons",
            "starting": false
        },
        {
            "name": "     * \\brief Const",
            "starting": false
        },
        {
            "name": "     * \\brief Constr",
            "starting": false
        },
        {
            "name": "     * \\brief Constru",
            "starting": false
        },
        {
            "name": "     * \\brief Construc",
            "starting": false
        },
        {
            "name": "     * \\brief Construct",
            "starting": false
        },
        {
            "name": "     * \\brief Constructo",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor ",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor f",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor fo",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for ",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for t",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for th",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the ",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the i",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the in",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the int",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the inte",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the inter",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the intera",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interac",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interact",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interacti",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactiv",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive ",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive d",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive di",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive dic",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive dict",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive dicti",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive dictio",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive diction",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive dictiona",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive dictionar",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive dictionary",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive dictionary ",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive dictionary s",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive dictionary sh",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive dictionary she",
            "starting": false
        },
        {
            "name": "     * \\brief Constructor for the interactive dictionary shel",
            "starting": false
        },
        {
            "name": "     * \\brief D",
            "starting": false
        },
        {
            "name": "     * \\brief De",
            "starting": false
        },
        {
            "name": "     * \\brief Des",
            "starting": false
        },
        {
            "name": "     * \\brief Dest",
            "starting": false
        },
        {
            "name": "     * \\brief Destr",
            "starting": false
        },
        {
            "name": "     * \\brief Destru",
            "starting": false
        },
        {
            "name": "     * \\brief Destruc",
            "starting": false
        },
        {
            "name": "     * \\brief Destruct",
            "starting": false
        },
        {
            "name": "     * \\brief Destructo",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor ",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor f",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor fo",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for ",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for t",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for th",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the ",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the i",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the in",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the int",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the inte",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the inter",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the intera",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interac",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interact",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interacti",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactiv",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive ",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive d",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive di",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive dic",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive dict",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive dicti",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive dictio",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive diction",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive dictiona",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive dictionar",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive dictionary",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive dictionary ",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive dictionary s",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive dictionary sh",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive dictionary she",
            "starting": false
        },
        {
            "name": "     * \\brief Destructor for the interactive dictionary shel",
            "starting": false
        },
        {
            "name": "     * \\brief L",
            "starting": false
        },
        {
            "name": "     * \\brief La",
            "starting": false
        },
        {
            "name": "     * \\brief Lau",
            "starting": false
        },
        {
            "name": "     * \\brief Laun",
            "starting": false
        },
        {
            "name": "     * \\brief Launc",
            "starting": false
        },
        {
            "name": "     * \\brief Launch",
            "starting": false
        },
        {
            "name": "     * \\brief Launche",
            "starting": false
        },
        {
            "name": "     * \\brief Launches",
            "starting": false
        },
        {
            "name": "     * \\brief Launches ",
            "starting": false
        },
        {
            "name": "     * \\brief Launches t",
            "starting": false
        },
        {
            "name": "     * \\brief Launches th",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the ",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the i",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the in",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the int",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the inte",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the inter",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the intera",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interac",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interact",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interacti",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactiv",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive ",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive d",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive di",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive dic",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive dict",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive dicti",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive dictio",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive diction",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive dictiona",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive dictionar",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive dictionary",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive dictionary ",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive dictionary s",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive dictionary sh",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive dictionary she",
            "starting": false
        },
        {
            "name": "     * \\brief Launches the interactive dictionary shel",
            "starting": false
        },
        {
            "name": "    /",
            "starting": false
        },
        {
            "name": "    /*",
            "starting": false
        },
        {
            "name": "    S",
            "starting": false
        },
        {
            "name": "    Sh",
            "starting": false
        },
        {
            "name": "    She",
            "starting": false
        },
        {
            "name": "    Shel",
            "starting": false
        },
        {
            "name": "    Shell",
            "starting": false
        },
        {
            "name": "    Shell(",
            "starting": false
        },
        {
            "name": "    Shell()",
            "starting": false
        },
        {
            "name": "    W",
            "starting": false
        },
        {
            "name": "    Wo",
            "starting": false
        },
        {
            "name": "    Woo",
            "starting": false
        },
        {
            "name": "    Woor",
            "starting": false
        },
        {
            "name": "    Woord",
            "starting": false
        },
        {
            "name": "    Woorde",
            "starting": false
        },
        {
            "name": "    Woorden",
            "starting": false
        },
        {
            "name": "    Woordenb",
            "starting": false
        },
        {
            "name": "    Woordenbo",
            "starting": false
        },
        {
            "name": "    Woordenboe",
            "starting": false
        },
        {
            "name": "    Woordenboek",
            "starting": false
        },
        {
            "name": "    Woordenboek*",
            "starting": false
        },
        {
            "name": "    Woordenboek* ",
            "starting": false
        },
        {
            "name": "    Woordenboek* d",
            "starting": false
        },
        {
            "name": "    Woordenboek* di",
            "starting": false
        },
        {
            "name": "    Woordenboek* dic",
            "starting": false
        },
        {
            "name": "    Woordenboek* dict",
            "starting": false
        },
        {
            "name": "    Woordenboek* dicti",
            "starting": false
        },
        {
            "name": "    Woordenboek* dictio",
            "starting": false
        },
        {
            "name": "    Woordenboek* diction",
            "starting": false
        },
        {
            "name": "    Woordenboek* dictiona",
            "starting": false
        },
        {
            "name": "    Woordenboek* dictionar",
            "starting": false
        },
        {
            "name": "    Woordenboek* dictionary",
            "starting": false
        },
        {
            "name": "    b",
            "starting": false
        },
        {
            "name": "    bo",
            "starting": false
        },
        {
            "name": "    boo",
            "starting": false
        },
        {
            "name": "    bool",
            "starting": false
        },
        {
            "name": "    bool ",
            "starting": false
        },
        {
            "name": "    bool r",
            "starting": false
        },
        {
            "name": "    bool ru",
            "starting": false
        },
        {
            "name": "    bool run",
            "starting": false
        },
        {
            "name": "    bool runn",
            "starting": false
        },
        {
            "name": "    bool runni",
            "starting": false
        },
        {
            "name": "    bool runnin",
            "starting": false
        },
        {
            "name": "    bool running",
            "starting": false
        },
        {
            "name": "    s",
            "starting": false
        },
        {
            "name": "    st",
            "starting": false
        },
        {
            "name": "    std",
            "starting": false
        },
        {
            "name": "    std:",
            "starting": false
        },
        {
            "name": "    std::",
            "starting": false
        },
        {
            "name": "    std::s",
            "starting": false
        },
        {
            "name": "    std::st",
            "starting": false
        },
        {
            "name": "    std::str",
            "starting": false
        },
        {
            "name": "    std::stri",
            "starting": false
        },
        {
            "name": "    std::strin",
            "starting": false
        },
        {
            "name": "    std::string",
            "starting": false
        },
        {
            "name": "    std::string ",
            "starting": false
        },
        {
            "name": "    std::string p",
            "starting": false
        },
        {
            "name": "    std::string pr",
            "starting": false
        },
        {
            "name": "    std::string pro",
            "starting": false
        },
        {
            "name": "    std::string prom",
            "starting": false
        },
        {
            "name": "    std::string promp",
            "starting": false
        },
        {
            "name": "    std::string prompt",
            "starting": false
        },
        {
            "name": "    v",
            "starting": false
        },
        {
            "name": "    vo",
            "starting": false
        },
        {
            "name": "    voi",
            "starting": false
        },
        {
            "name": "    void",
            "starting": false
        },
        {
            "name": "    void ",
            "starting": false
        },
        {
            "name": "    void l",
            "starting": false
        },
        {
            "name": "    void la",
            "starting": false
        },
        {
            "name": "    void lau",
            "starting": false
        },
        {
            "name": "    void laun",
            "starting": false
        },
        {
            "name": "    void launc",
            "starting": false
        },
        {
            "name": "    void launch",
            "starting": false
        },
        {
            "name": "    void launch(",
            "starting": false
        },
        {
            "name": "    void launch()",
            "starting": false
        },
        {
            "name": "    void r",
            "starting": false
        },
        {
            "name": "    void ru",
            "starting": false
        },
        {
            "name": "    void run",
            "starting": false
        },
        {
            "name": "    void run_",
            "starting": false
        },
        {
            "name": "    void run_a",
            "starting": false
        },
        {
            "name": "    void run_ad",
            "starting": false
        },
        {
            "name": "    void run_add",
            "starting": false
        },
        {
            "name": "    void run_add(",
            "starting": false
        },
        {
            "name": "    void run_add(s",
            "starting": false
        },
        {
            "name": "    void run_add(st",
            "starting": false
        },
        {
            "name": "    void run_add(std",
            "starting": false
        },
        {
            "name": "    void run_add(std:",
            "starting": false
        },
        {
            "name": "    void run_add(std::",
            "starting": false
        },
        {
            "name": "    void run_add(std::v",
            "starting": false
        },
        {
            "name": "    void run_add(std::ve",
            "starting": false
        },
        {
            "name": "    void run_add(std::vec",
            "starting": false
        },
        {
            "name": "    void run_add(std::vect",
            "starting": false
        },
        {
            "name": "    void run_add(std::vecto",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<s",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<st",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std:",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std::",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std::s",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std::st",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std::str",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std::stri",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std::strin",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std::string",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std::string>",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std::string> ",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std::string> &",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std::string> &a",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std::string> &ar",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std::string> &arg",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std::string> &args",
            "starting": false
        },
        {
            "name": "    void run_add(std::vector<std::string> &args)",
            "starting": false
        },
        {
            "name": "    void run_c",
            "starting": false
        },
        {
            "name": "    void run_ch",
            "starting": false
        },
        {
            "name": "    void run_che",
            "starting": false
        },
        {
            "name": "    void run_chec",
            "starting": false
        },
        {
            "name": "    void run_check",
            "starting": false
        },
        {
            "name": "    void run_check_",
            "starting": false
        },
        {
            "name": "    void run_check_t",
            "starting": false
        },
        {
            "name": "    void run_check_te",
            "starting": false
        },
        {
            "name": "    void run_check_tex",
            "starting": false
        },
        {
            "name": "    void run_check_text",
            "starting": false
        },
        {
            "name": "    void run_check_text(",
            "starting": false
        },
        {
            "name": "    void run_check_text(s",
            "starting": false
        },
        {
            "name": "    void run_check_text(st",
            "starting": false
        },
        {
            "name": "    void run_check_text(std",
            "starting": false
        },
        {
            "name": "    void run_check_text(std:",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::v",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::ve",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vec",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vect",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vecto",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<s",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<st",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std:",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std::",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std::s",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std::st",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std::str",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std::stri",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std::strin",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std::string",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std::string>",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std::string> ",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std::string> &",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std::string> &a",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std::string> &ar",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std::string> &arg",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std::string> &args",
            "starting": false
        },
        {
            "name": "    void run_check_text(std::vector<std::string> &args)",
            "starting": false
        },
        {
            "name": "    void run_co",
            "starting": false
        },
        {
            "name": "    void run_com",
            "starting": false
        },
        {
            "name": "    void run_comb",
            "starting": false
        },
        {
            "name": "    void run_combi",
            "starting": false
        },
        {
            "name": "    void run_combin",
            "starting": false
        },
        {
            "name": "    void run_combine",
            "starting": false
        },
        {
            "name": "    void run_combine(",
            "starting": false
        },
        {
            "name": "    void run_combine(s",
            "starting": false
        },
        {
            "name": "    void run_combine(st",
            "starting": false
        },
        {
            "name": "    void run_combine(std",
            "starting": false
        },
        {
            "name": "    void run_combine(std:",
            "starting": false
        },
        {
            "name": "    void run_combine(std::",
            "starting": false
        },
        {
            "name": "    void run_combine(std::v",
            "starting": false
        },
        {
            "name": "    void run_combine(std::ve",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vec",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vect",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vecto",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<s",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<st",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std:",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std::",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std::s",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std::st",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std::str",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std::stri",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std::strin",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std::string",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std::string>",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std::string> ",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std::string> &",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std::string> &a",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std::string> &ar",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std::string> &arg",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std::string> &args",
            "starting": false
        },
        {
            "name": "    void run_combine(std::vector<std::string> &args)",
            "starting": false
        },
        {
            "name": "    void run_e",
            "starting": false
        },
        {
            "name": "    void run_ex",
            "starting": false
        },
        {
            "name": "    void run_exi",
            "starting": false
        },
        {
            "name": "    void run_exit",
            "starting": false
        },
        {
            "name": "    void run_exit(",
            "starting": false
        },
        {
            "name": "    void run_exit()",
            "starting": false
        },
        {
            "name": "    void run_h",
            "starting": false
        },
        {
            "name": "    void run_he",
            "starting": false
        },
        {
            "name": "    void run_hel",
            "starting": false
        },
        {
            "name": "    void run_help",
            "starting": false
        },
        {
            "name": "    void run_help(",
            "starting": false
        },
        {
            "name": "    void run_help()",
            "starting": false
        },
        {
            "name": "    void run_l",
            "starting": false
        },
        {
            "name": "    void run_le",
            "starting": false
        },
        {
            "name": "    void run_len",
            "starting": false
        },
        {
            "name": "    void run_leng",
            "starting": false
        },
        {
            "name": "    void run_lengt",
            "starting": false
        },
        {
            "name": "    void run_length",
            "starting": false
        },
        {
            "name": "    void run_length(",
            "starting": false
        },
        {
            "name": "    void run_length(s",
            "starting": false
        },
        {
            "name": "    void run_length(st",
            "starting": false
        },
        {
            "name": "    void run_length(std",
            "starting": false
        },
        {
            "name": "    void run_length(std:",
            "starting": false
        },
        {
            "name": "    void run_length(std::",
            "starting": false
        },
        {
            "name": "    void run_length(std::v",
            "starting": false
        },
        {
            "name": "    void run_length(std::ve",
            "starting": false
        },
        {
            "name": "    void run_length(std::vec",
            "starting": false
        },
        {
            "name": "    void run_length(std::vect",
            "starting": false
        },
        {
            "name": "    void run_length(std::vecto",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<s",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<st",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std:",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std::",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std::s",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std::st",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std::str",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std::stri",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std::strin",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std::string",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std::string>",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std::string> ",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std::string> &",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std::string> &a",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std::string> &ar",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std::string> &arg",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std::string> &args",
            "starting": false
        },
        {
            "name": "    void run_length(std::vector<std::string> &args)",
            "starting": false
        },
        {
            "name": "    void run_li",
            "starting": false
        },
        {
            "name": "    void run_lin",
            "starting": false
        },
        {
            "name": "    void run_line",
            "starting": false
        },
        {
            "name": "    void run_line(",
            "starting": false
        },
        {
            "name": "    void run_line(s",
            "starting": false
        },
        {
            "name": "    void run_line(st",
            "starting": false
        },
        {
            "name": "    void run_line(std",
            "starting": false
        },
        {
            "name": "    void run_line(std:",
            "starting": false
        },
        {
            "name": "    void run_line(std::",
            "starting": false
        },
        {
            "name": "    void run_line(std::s",
            "starting": false
        },
        {
            "name": "    void run_line(std::st",
            "starting": false
        },
        {
            "name": "    void run_line(std::str",
            "starting": false
        },
        {
            "name": "    void run_line(std::stri",
            "starting": false
        },
        {
            "name": "    void run_line(std::strin",
            "starting": false
        },
        {
            "name": "    void run_line(std::string",
            "starting": false
        },
        {
            "name": "    void run_line(std::string ",
            "starting": false
        },
        {
            "name": "    void run_line(std::string &",
            "starting": false
        },
        {
            "name": "    void run_line(std::string &c",
            "starting": false
        },
        {
            "name": "    void run_line(std::string &cm",
            "starting": false
        },
        {
            "name": "    void run_line(std::string &cmd",
            "starting": false
        },
        {
            "name": "    void run_line(std::string &cmd)",
            "starting": false
        },
        {
            "name": "    void run_lo",
            "starting": false
        },
        {
            "name": "    void run_loa",
            "starting": false
        },
        {
            "name": "    void run_load",
            "starting": false
        },
        {
            "name": "    void run_load(",
            "starting": false
        },
        {
            "name": "    void run_load(s",
            "starting": false
        },
        {
            "name": "    void run_load(st",
            "starting": false
        },
        {
            "name": "    void run_load(std",
            "starting": false
        },
        {
            "name": "    void run_load(std:",
            "starting": false
        },
        {
            "name": "    void run_load(std::",
            "starting": false
        },
        {
            "name": "    void run_load(std::v",
            "starting": false
        },
        {
            "name": "    void run_load(std::ve",
            "starting": false
        },
        {
            "name": "    void run_load(std::vec",
            "starting": false
        },
        {
            "name": "    void run_load(std::vect",
            "starting": false
        },
        {
            "name": "    void run_load(std::vecto",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<s",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<st",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std:",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std::",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std::s",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std::st",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std::str",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std::stri",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std::strin",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std::string",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std::string>",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std::string> ",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std::string> &",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std::string> &a",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std::string> &ar",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std::string> &arg",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std::string> &args",
            "starting": false
        },
        {
            "name": "    void run_load(std::vector<std::string> &args)",
            "starting": false
        },
        {
            "name": "    void run_m",
            "starting": false
        },
        {
            "name": "    void run_mi",
            "starting": false
        },
        {
            "name": "    void run_min",
            "starting": false
        },
        {
            "name": "    void run_mini",
            "starting": false
        },
        {
            "name": "    void run_minim",
            "starting": false
        },
        {
            "name": "    void run_minimi",
            "starting": false
        },
        {
            "name": "    void run_minimiz",
            "starting": false
        },
        {
            "name": "    void run_minimize",
            "starting": false
        },
        {
            "name": "    void run_minimize(",
            "starting": false
        },
        {
            "name": "    void run_minimize(s",
            "starting": false
        },
        {
            "name": "    void run_minimize(st",
            "starting": false
        },
        {
            "name": "    void run_minimize(std",
            "starting": false
        },
        {
            "name": "    void run_minimize(std:",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::v",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::ve",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vec",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vect",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vecto",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<s",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<st",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std:",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std::",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std::s",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std::st",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std::str",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std::stri",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std::strin",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std::string",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std::string>",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std::string> ",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std::string> &",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std::string> &a",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std::string> &ar",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std::string> &arg",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std::string> &args",
            "starting": false
        },
        {
            "name": "    void run_minimize(std::vector<std::string> &args)",
            "starting": false
        },
        {
            "name": "    void run_r",
            "starting": false
        },
        {
            "name": "    void run_re",
            "starting": false
        },
        {
            "name": "    void run_rem",
            "starting": false
        },
        {
            "name": "    void run_remo",
            "starting": false
        },
        {
            "name": "    void run_remov",
            "starting": false
        },
        {
            "name": "    void run_remove",
            "starting": false
        },
        {
            "name": "    void run_remove(",
            "starting": false
        },
        {
            "name": "    void run_remove(s",
            "starting": false
        },
        {
            "name": "    void run_remove(st",
            "starting": false
        },
        {
            "name": "    void run_remove(std",
            "starting": false
        },
        {
            "name": "    void run_remove(std:",
            "starting": false
        },
        {
            "name": "    void run_remove(std::",
            "starting": false
        },
        {
            "name": "    void run_remove(std::v",
            "starting": false
        },
        {
            "name": "    void run_remove(std::ve",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vec",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vect",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vecto",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<s",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<st",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std:",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std::",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std::s",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std::st",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std::str",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std::stri",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std::strin",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std::string",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std::string>",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std::string> ",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std::string> &",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std::string> &a",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std::string> &ar",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std::string> &arg",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std::string> &args",
            "starting": false
        },
        {
            "name": "    void run_remove(std::vector<std::string> &args)",
            "starting": false
        },
        {
            "name": "    void run_s",
            "starting": false
        },
        {
            "name": "    void run_sa",
            "starting": false
        },
        {
            "name": "    void run_sav",
            "starting": false
        },
        {
            "name": "    void run_save",
            "starting": false
        },
        {
            "name": "    void run_save(",
            "starting": false
        },
        {
            "name": "    void run_save(s",
            "starting": false
        },
        {
            "name": "    void run_save(st",
            "starting": false
        },
        {
            "name": "    void run_save(std",
            "starting": false
        },
        {
            "name": "    void run_save(std:",
            "starting": false
        },
        {
            "name": "    void run_save(std::",
            "starting": false
        },
        {
            "name": "    void run_save(std::v",
            "starting": false
        },
        {
            "name": "    void run_save(std::ve",
            "starting": false
        },
        {
            "name": "    void run_save(std::vec",
            "starting": false
        },
        {
            "name": "    void run_save(std::vect",
            "starting": false
        },
        {
            "name": "    void run_save(std::vecto",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<s",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<st",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std:",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std::",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std::s",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std::st",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std::str",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std::stri",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std::strin",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std::string",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std::string>",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std::string> ",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std::string> &",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std::string> &a",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std::string> &ar",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std::string> &arg",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std::string> &args",
            "starting": false
        },
        {
            "name": "    void run_save(std::vector<std::string> &args)",
            "starting": false
        },
        {
            "name": "    void run_su",
            "starting": false
        },
        {
            "name": "    void run_sug",
            "starting": false
        },
        {
            "name": "    void run_sugg",
            "starting": false
        },
        {
            "name": "    void run_sugge",
            "starting": false
        },
        {
            "name": "    void run_sugges",
            "starting": false
        },
        {
            "name": "    void run_suggest",
            "starting": false
        },
        {
            "name": "    void run_suggest(",
            "starting": false
        },
        {
            "name": "    void run_suggest(s",
            "starting": false
        },
        {
            "name": "    void run_suggest(st",
            "starting": false
        },
        {
            "name": "    void run_suggest(std",
            "starting": false
        },
        {
            "name": "    void run_suggest(std:",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::v",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::ve",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vec",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vect",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vecto",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<s",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<st",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std:",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std::",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std::s",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std::st",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std::str",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std::stri",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std::strin",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std::string",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std::string>",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std::string> ",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std::string> &",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std::string> &a",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std::string> &ar",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std::string> &arg",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std::string> &args",
            "starting": false
        },
        {
            "name": "    void run_suggest(std::vector<std::string> &args)",
            "starting": false
        },
        {
            "name": "    void run_w",
            "starting": false
        },
        {
            "name": "    void run_wo",
            "starting": false
        },
        {
            "name": "    void run_wor",
            "starting": false
        },
        {
            "name": "    void run_word",
            "starting": false
        },
        {
            "name": "    void run_wordl",
            "starting": false
        },
        {
            "name": "    void run_wordle",
            "starting": false
        },
        {
            "name": "    void run_wordle(",
            "starting": false
        },
        {
            "name": "    void run_wordle(s",
            "starting": false
        },
        {
            "name": "    void run_wordle(st",
            "starting": false
        },
        {
            "name": "    void run_wordle(std",
            "starting": false
        },
        {
            "name": "    void run_wordle(std:",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::v",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::ve",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vec",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vect",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vecto",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<s",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<st",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std:",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std::",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std::s",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std::st",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std::str",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std::stri",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std::strin",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std::string",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std::string>",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std::string> ",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std::string> &",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std::string> &a",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std::string> &ar",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std::string> &arg",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std::string> &args",
            "starting": false
        },
        {
            "name": "    void run_wordle(std::vector<std::string> &args)",
            "starting": false
        },
        {
            "name": "    ~",
            "starting": false
        },
        {
            "name": "    ~S",
            "starting": false
        },
        {
            "name": "    ~Sh",
            "starting": false
        },
        {
            "name": "    ~She",
            "starting": false
        },
        {
            "name": "    ~Shel",
            "starting": false
        },
        {
            "name": "    ~Shell",
            "starting": false
        },
        {
            "name": "    ~Shell(",
            "starting": false
        },
        {
            "name": "    ~Shell()",
            "starting": false
        },
        {
            "name": "    ~Shell() ",
            "starting": false
        },
        {
            "name": "    ~Shell() =",
            "starting": false
        },
        {
            "name": "    ~Shell() = ",
            "starting": false
        },
        {
            "name": "    ~Shell() = d",
            "starting": false
        },
        {
            "name": "    ~Shell() = de",
            "starting": false
        },
        {
            "name": "    ~Shell() = def",
            "starting": false
        },
        {
            "name": "    ~Shell() = defa",
            "starting": false
        },
        {
            "name": "    ~Shell() = defau",
            "starting": false
        },
        {
            "name": "    ~Shell() = defaul",
            "starting": false
        },
        {
            "name": "    ~Shell() = default",
            "starting": false
        },
        {
            "name": "#",
            "starting": false
        },
        {
            "name": "#d",
            "starting": false
        },
        {
            "name": "#de",
            "starting": false
        },
        {
            "name": "#def",
            "starting": false
        },
        {
            "name": "#defi",
            "starting": false
        },
        {
            "name": "#defin",
            "starting": false
        },
        {
            "name": "#define",
            "starting": false
        },
        {
            "name": "#define ",
            "starting": false
        },
        {
            "name": "#define D",
            "starting": false
        },
        {
            "name": "#define DI",
            "starting": false
        },
        {
            "name": "#define DIC",
            "starting": false
        },
        {
            "name": "#define DICT",
            "starting": false
        },
        {
            "name": "#define DICTI",
            "starting": false
        },
        {
            "name": "#define DICTIO",
            "starting": false
        },
        {
            "name": "#define DICTION",
            "starting": false
        },
        {
            "name": "#define DICTIONA",
            "starting": false
        },
        {
            "name": "#define DICTIONAR",
            "starting": false
        },
        {
            "name": "#define DICTIONARY",
            "starting": false
        },
        {
            "name": "#define DICTIONARY_",
            "starting": false
        },
        {
            "name": "#define DICTIONARY_S",
            "starting": false
        },
        {
            "name": "#define DICTIONARY_SH",
            "starting": false
        },
        {
            "name": "#define DICTIONARY_SHE",
            "starting": false
        },
        {
            "name": "#define DICTIONARY_SHEL",
            "starting": false
        },
        {
            "name": "#define DICTIONARY_SHELL",
            "starting": false
        },
        {
            "name": "#define DICTIONARY_SHELL_",
            "starting": false
        },
        {
            "name": "#e",
            "starting": false
        },
        {
            "name": "#en",
            "starting": false
        },
        {
            "name": "#end",
            "starting": false
        },
        {
            "name": "#endi",
            "starting": false
        },
        {
            "name": "#i",
            "starting": false
        },
        {
            "name": "#if",
            "starting": false
        },
        {
            "name": "#ifn",
            "starting": false
        },
        {
            "name": "#ifnd",
            "starting": false
        },
        {
            "name": "#ifnde",
            "starting": false
        },
        {
            "name": "#ifndef",
            "starting": false
        },
        {
            "name": "#ifndef ",
            "starting": false
        },
        {
            "name": "#ifndef D",
            "starting": false
        },
        {
            "name": "#ifndef DI",
            "starting": false
        },
        {
            "name": "#ifndef DIC",
            "starting": false
        },
        {
            "name": "#ifndef DICT",
            "starting": false
        },
        {
            "name": "#ifndef DICTI",
            "starting": false
        },
        {
            "name": "#ifndef DICTIO",
            "starting": false
        },
        {
            "name": "#ifndef DICTION",
            "starting": false
        },
        {
            "name": "#ifndef DICTIONA",
            "starting": false
        },
        {
            "name": "#ifndef DICTIONAR",
            "starting": false
        },
        {
            "name": "#ifndef DICTIONARY",
            "starting": false
        },
        {
            "name": "#ifndef DICTIONARY_",
            "starting": false
        },
        {
            "name": "#ifndef DICTIONARY_S",
            "starting": false
        },
        {
            "name": "#ifndef DICTIONARY_SH",
            "starting": false
        },
        {
            "name": "#ifndef DICTIONARY_SHE",
            "starting": false
        },
        {
            "name": "#ifndef DICTIONARY_SHEL",
            "starting": false
        },
        {
            "name": "#ifndef DICTIONARY_SHELL",
            "starting": false
        },
        {
            "name": "#ifndef DICTIONARY_SHELL_",
            "starting": false
        },
        {
            "name": "#in",
            "starting": false
        },
        {
            "name": "#inc",
            "starting": false
        },
        {
            "name": "#incl",
            "starting": false
        },
        {
            "name": "#inclu",
            "starting": false
        },
        {
            "name": "#includ",
            "starting": false
        },
        {
            "name": "#include",
            "starting": false
        },
        {
            "name": "#include ",
            "starting": false
        },
        {
            "name": "#include \"",
            "starting": false
        },
        {
            "name": "#include \"W",
            "starting": false
        },
        {
            "name": "#include \"Wo",
            "starting": false
        },
        {
            "name": "#include \"Woo",
            "starting": false
        },
        {
            "name": "#include \"Woor",
            "starting": false
        },
        {
            "name": "#include \"Woord",
            "starting": false
        },
        {
            "name": "#include \"Woorde",
            "starting": false
        },
        {
            "name": "#include \"Woorden",
            "starting": false
        },
        {
            "name": "#include \"Woordenb",
            "starting": false
        },
        {
            "name": "#include \"Woordenbo",
            "starting": false
        },
        {
            "name": "#include \"Woordenboe",
            "starting": false
        },
        {
            "name": "#include \"Woordenboek",
            "starting": false
        },
        {
            "name": "#include \"Woordenboek.",
            "starting": false
        },
        {
            "name": "#include \"Woordenboek.h",
            "starting": false
        },
        {
            "name": "#include <",
            "starting": false
        },
        {
            "name": "#include <e",
            "starting": false
        },
        {
            "name": "#include <ex",
            "starting": false
        },
        {
            "name": "#include <exc",
            "starting": false
        },
        {
            "name": "#include <exce",
            "starting": false
        },
        {
            "name": "#include <excep",
            "starting": false
        },
        {
            "name": "#include <except",
            "starting": false
        },
        {
            "name": "#include <excepti",
            "starting": false
        },
        {
            "name": "#include <exceptio",
            "starting": false
        },
        {
            "name": "#include <exception",
            "starting": false
        },
        {
            "name": "#include <i",
            "starting": false
        },
        {
            "name": "#include <io",
            "starting": false
        },
        {
            "name": "#include <ios",
            "starting": false
        },
        {
            "name": "#include <iost",
            "starting": false
        },
        {
            "name": "#include <iostr",
            "starting": false
        },
        {
            "name": "#include <iostre",
            "starting": false
        },
        {
            "name": "#include <iostrea",
            "starting": false
        },
        {
            "name": "#include <iostream",
            "starting": false
        },
        {
            "name": "#include <s",
            "starting": false
        },
        {
            "name": "#include <st",
            "starting": false
        },
        {
            "name": "#include <str",
            "starting": false
        },
        {
            "name": "#include <stri",
            "starting": false
        },
        {
            "name": "#include <strin",
            "starting": false
        },
        {
            "name": "#include <string",
            "starting": false
        },
        {
            "name": "#include <v",
            "starting": false
        },
        {
            "name": "#include <ve",
            "starting": false
        },
        {
            "name": "#include <vec",
            "starting": false
        },
        {
            "name": "#include <vect",
            "starting": false
        },
        {
            "name": "#include <vecto",
            "starting": false
        },
        {
            "name": "#include <vector",
            "starting": false
        },
        {
            "name": "Start",
            "starting": true
        },
        {
            "name": "b",
            "starting": false
        },
        {
            "name": "bo",
            "starting": false
        },
        {
            "name": "boo",
            "starting": false
        },
        {
            "name": "bool",
            "starting": false
        },
        {
            "name": "bool ",
            "starting": false
        },
        {
            "name": "bool F",
            "starting": false
        },
        {
            "name": "bool Fi",
            "starting": false
        },
        {
            "name": "bool Fil",
            "starting": false
        },
        {
            "name": "bool File",
            "starting": false
        },
        {
            "name": "bool FileE",
            "starting": false
        },
        {
            "name": "bool FileEx",
            "starting": false
        },
        {
            "name": "bool FileExi",
            "starting": false
        },
        {
            "name": "bool FileExis",
            "starting": false
        },
        {
            "name": "bool FileExist",
            "starting": false
        },
        {
            "name": "bool FileExists",
            "starting": false
        },
        {
            "name": "bool FileExists(",
            "starting": false
        },
        {
            "name": "bool FileExists(c",
            "starting": false
        },
        {
            "name": "bool FileExists(co",
            "starting": false
        },
        {
            "name": "bool FileExists(con",
            "starting": false
        },
        {
            "name": "bool FileExists(cons",
            "starting": false
        },
        {
            "name": "bool FileExists(const",
            "starting": false
        },
        {
            "name": "bool FileExists(const ",
            "starting": false
        },
        {
            "name": "bool FileExists(const s",
            "starting": false
        },
        {
            "name": "bool FileExists(const st",
            "starting": false
        },
        {
            "name": "bool FileExists(const std",
            "starting": false
        },
        {
            "name": "bool FileExists(const std:",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::s",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::st",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::str",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::stri",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::strin",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::string",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::string ",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::string &",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::string &f",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::string &fi",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::string &fil",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::string &file",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::string &filen",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::string &filena",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::string &filenam",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::string &filename",
            "starting": false
        },
        {
            "name": "bool FileExists(const std::string &filename)",
            "starting": false
        },
        {
            "name": "bool c",
            "starting": false
        },
        {
            "name": "bool co",
            "starting": false
        },
        {
            "name": "bool con",
            "starting": false
        },
        {
            "name": "bool cont",
            "starting": false
        },
        {
            "name": "bool conta",
            "starting": false
        },
        {
            "name": "bool contai",
            "starting": false
        },
        {
            "name": "bool contain",
            "starting": false
        },
        {
            "name": "bool contains",
            "starting": false
        },
        {
            "name": "bool containsO",
            "starting": false
        },
        {
            "name": "bool containsOn",
            "starting": false
        },
        {
            "name": "bool containsOnl",
            "starting": false
        },
        {
            "name": "bool containsOnly",
            "starting": false
        },
        {
            "name": "bool containsOnlyL",
            "starting": false
        },
        {
            "name": "bool containsOnlyLe",
            "starting": false
        },
        {
            "name": "bool containsOnlyLet",
            "starting": false
        },
        {
            "name": "bool containsOnlyLett",
            "starting": false
        },
        {
            "name": "bool containsOnlyLette",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetter",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(s",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(st",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std:",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::s",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::st",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::str",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::stri",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::strin",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::string",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::string ",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::string c",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::string co",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::string con",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::string cons",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::string const",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::string const ",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::string const &",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::string const &s",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::string const &st",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::string const &str",
            "starting": false
        },
        {
            "name": "bool containsOnlyLetters(std::string const &str)",
            "starting": false
        },
        {
            "name": "bool i",
            "starting": false
        },
        {
            "name": "bool is",
            "starting": false
        },
        {
            "name": "bool isN",
            "starting": false
        },
        {
            "name": "bool isNu",
            "starting": false
        },
        {
            "name": "bool isNum",
            "starting": false
        },
        {
            "name": "bool isNumb",
            "starting": false
        },
        {
            "name": "bool isNumbe",
            "starting": false
        },
        {
            "name": "bool isNumber",
            "starting": false
        },
        {
            "name": "bool isNumber(",
            "starting": false
        },
        {
            "name": "bool isNumber(c",
            "starting": false
        },
        {
            "name": "bool isNumber(co",
            "starting": false
        },
        {
            "name": "bool isNumber(con",
            "starting": false
        },
        {
            "name": "bool isNumber(cons",
            "starting": false
        },
        {
            "name": "bool isNumber(const",
            "starting": false
        },
        {
            "name": "bool isNumber(const ",
            "starting": false
        },
        {
            "name": "bool isNumber(const s",
            "starting": false
        },
        {
            "name": "bool isNumber(const st",
            "starting": false
        },
        {
            "name": "bool isNumber(const str",
            "starting": false
        },
        {
            "name": "bool isNumber(const stri",
            "starting": false
        },
        {
            "name": "bool isNumber(const strin",
            "starting": false
        },
        {
            "name": "bool isNumber(const string",
            "starting": false
        },
        {
            "name": "bool isNumber(const string ",
            "starting": false
        },
        {
            "name": "bool isNumber(const string &",
            "starting": false
        },
        {
            "name": "bool isNumber(const string &s",
            "starting": false
        },
        {
            "name": "bool isNumber(const string &st",
            "starting": false
        },
        {
            "name": "bool isNumber(const string &str",
            "starting": false
        },
        {
            "name": "bool isNumber(const string &str)",
            "starting": false
        },
        {
            "name": "c",
            "starting": false
        },
        {
            "name": "cl",
            "starting": false
        },
        {
            "name": "cla",
            "starting": false
        },
        {
            "name": "clas",
            "starting": false
        },
        {
            "name": "class",
            "starting": false
        },
        {
            "name": "class ",
            "starting": false
        },
        {
            "name": "class S",
            "starting": false
        },
        {
            "name": "class Sh",
            "starting": false
        },
        {
            "name": "class She",
            "starting": false
        },
        {
            "name": "class Shel",
            "starting": false
        },
        {
            "name": "class Shell",
            "starting": false
        },
        {
            "name": "class Shell ",
            "starting": false
        },
        {
            "name": "p",
            "starting": false
        },
        {
            "name": "pr",
            "starting": false
        },
        {
            "name": "pri",
            "starting": false
        },
        {
            "name": "priv",
            "starting": false
        },
        {
            "name": "priva",
            "starting": false
        },
        {
            "name": "privat",
            "starting": false
        },
        {
            "name": "private",
            "starting": false
        },
        {
            "name": "pu",
            "starting": false
        },
        {
            "name": "pub",
            "starting": false
        },
        {
            "name": "publ",
            "starting": false
        },
        {
            "name": "publi",
            "starting": false
        },
        {
            "name": "public",
            "starting": false
        },
        {
            "name": "}",
            "starting": false
        }
    ],
    "transitions": [
        {
            "from": " ",
            "input": " ",
            "to": "  "
        },
        {
            "from": "  ",
            "input": "  ",
            "to": "   "
        },
        {
            "from": "   ",
            "input": "   ",
            "to": "    "
        },
        {
            "from": "    ",
            "input": "    ",
            "to": "    b"
        },
        {
            "from": "     ",
            "input": "     ",
            "to": "     *"
        },
        {
            "from": "     *",
            "input": "     *",
            "to": "     * "
        },
        {
            "from": "     * ",
            "input": "     * ",
            "to": "     * \\"
        },
        {
            "from": "     * \\",
            "input": "     * \\",
            "to": "     * \\b"
        },
        {
            "from": "     * \\a",
            "input": "     * \\a",
            "to": "     * \\au"
        },
        {
            "from": "     * \\au",
            "input": "     * \\au",
            "to": "     * \\aut"
        },
        {
            "from": "     * \\aut",
            "input": "     * \\aut",
            "to": "     * \\auth"
        },
        {
            "from": "     * \\auth",
            "input": "     * \\auth",
            "to": "     * \\autho"
        },
        {
            "from": "     * \\autho",
            "input": "     * \\autho",
            "to": "     * \\author"
        },
        {
            "from": "     * \\author",
            "input": "     * \\author",
            "to": "     * \\author "
        },
        {
            "from": "     * \\author ",
            "input": "     * \\author ",
            "to": "     * \\author L"
        },
        {
            "from": "     * \\author L",
            "input": "     * \\author L",
            "to": "     * \\author La"
        },
        {
            "from": "     * \\author La",
            "input": "     * \\author La",
            "to": "     * \\author Lau"
        },
        {
            "from": "     * \\author Lau",
            "input": "     * \\author Lau",
            "to": "     * \\author Laur"
        },
        {
            "from": "     * \\author Laur",
            "input": "     * \\author Laur",
            "to": "     * \\author Laure"
        },
        {
            "from": "     * \\author Laure",
            "input": "     * \\author Laure",
            "to": "     * \\author Lauren"
        },
        {
            "from": "     * \\author Lauren",
            "input": "     * \\author Lauren",
            "to": "     * \\author Laurens"
        },
        {
            "from": "     * \\author Laurens",
            "input": "     * \\author Laurens",
            "to": "     * \\author Laurens "
        },
        {
            "from": "     * \\author Laurens ",
            "input": "     * \\author Laurens ",
            "to": "     * \\author Laurens D"
        },
        {
            "from": "     * \\author Laurens D",
            "input": "     * \\author Laurens D",
            "to": "     * \\author Laurens De"
        },
        {
            "from": "     * \\author Laurens De",
            "input": "     * \\author Laurens De",
            "to": "     * \\author Laurens De "
        },
        {
            "from": "     * \\author Laurens De ",
            "input": "     * \\author Laurens De ",
            "to": "     * \\author Laurens De W"
        },
        {
            "from": "     * \\author Laurens De W",
            "input": "     * \\author Laurens De W",
            "to": "     * \\author Laurens De Wa"
        },
        {
            "from": "     * \\author Laurens De Wa",
            "input": "     * \\author Laurens De Wa",
            "to": "     * \\author Laurens De Wac"
        },
        {
            "from": "     * \\author Laurens De Wac",
            "input": "     * \\author Laurens De Wac",
            "to": "     * \\author Laurens De Wach"
        },
        {
            "from": "     * \\author Laurens De Wach",
            "input": "     * \\author Laurens De Wach",
            "to": "     * \\author Laurens De Wacht"
        },
        {
            "from": "     * \\author Laurens De Wacht",
            "input": "     * \\author Laurens De Wacht",
            "to": "     * \\author Laurens De Wachte"
        },
        {
            "from": "     * \\author Laurens De Wachte",
            "input": "     * \\author Laurens De Wachte",
            "to": "     * \\author Laurens De Wachter"
        },
        {
            "from": "     * \\b",
            "input": "     * \\b",
            "to": "     * \\br"
        },
        {
            "from": "     * \\br",
            "input": "     * \\br",
            "to": "     * \\bri"
        },
        {
            "from": "     * \\bri",
            "input": "     * \\bri",
            "to": "     * \\brie"
        },
        {
            "from": "     * \\brie",
            "input": "     * \\brie",
            "to": "     * \\brief"
        },
        {
            "from": "     * \\brief",
            "input": "     * \\brief",
            "to": "     * \\brief "
        },
        {
            "from": "     * \\brief ",
            "input": "     * \\brief ",
            "to": "     * \\brief C"
        },
        {
            "from": "     * \\brief C",
            "input": "     * \\brief C",
            "to": "     * \\brief Co"
        },
        {
            "from": "     * \\brief Co",
            "input": "     * \\brief Co",
            "to": "     * \\brief Con"
        },
        {
            "from": "     * \\brief Con",
            "input": "     * \\brief Con",
            "to": "     * \\brief Cons"
        },
        {
            "from": "     * \\brief Cons",
            "input": "     * \\brief Cons",
            "to": "     * \\brief Const"
        },
        {
            "from": "     * \\brief Const",
            "input": "     * \\brief Const",
            "to": "     * \\brief Constr"
        },
        {
            "from": "     * \\brief Constr",
            "input": "     * \\brief Constr",
            "to": "     * \\brief Constru"
        },
        {
            "from": "     * \\brief Constru",
            "input": "     * \\brief Constru",
            "to": "     * \\brief Construc"
        },
        {
            "from": "     * \\brief Construc",
            "input": "     * \\brief Construc",
            "to": "     * \\brief Construct"
        },
        {
            "from": "     * \\brief Construct",
            "input": "     * \\brief Construct",
            "to": "     * \\brief Constructo"
        },
        {
            "from": "     * \\brief Constructo",
            "input": "     * \\brief Constructo",
            "to": "     * \\brief Constructor"
        },
        {
            "from": "     * \\brief Constructor",
            "input": "     * \\brief Constructor",
            "to": "     * \\brief Constructor "
        },
        {
            "from": "     * \\brief Constructor ",
            "input": "     * \\brief Constructor ",
            "to": "     * \\brief Constructor f"
        },
        {
            "from": "     * \\brief Constructor f",
            "input": "     * \\brief Constructor f",
            "to": "     * \\brief Constructor fo"
        },
        {
            "from": "     * \\brief Constructor fo",
            "input": "     * \\brief Constructor fo",
            "to": "     * \\brief Constructor for"
        },
        {
            "from": "     * \\brief Constructor for",
            "input": "     * \\brief Constructor for",
            "to": "     * \\brief Constructor for "
        },
        {
            "from": "     * \\brief Constructor for ",
            "input": "     * \\brief Constructor for ",
            "to": "     * \\brief Constructor for t"
        },
        {
            "from": "     * \\brief Constructor for t",
            "input": "     * \\brief Constructor for t",
            "to": "     * \\brief Constructor for th"
        },
        {
            "from": "     * \\brief Constructor for th",
            "input": "     * \\brief Constructor for th",
            "to": "     * \\brief Constructor for the"
        },
        {
            "from": "     * \\brief Constructor for the",
            "input": "     * \\brief Constructor for the",
            "to": "     * \\brief Constructor for the "
        },
        {
            "from": "     * \\brief Constructor for the ",
            "input": "     * \\brief Constructor for the ",
            "to": "     * \\brief Constructor for the i"
        },
        {
            "from": "     * \\brief Constructor for the i",
            "input": "     * \\brief Constructor for the i",
            "to": "     * \\brief Constructor for the in"
        },
        {
            "from": "     * \\brief Constructor for the in",
            "input": "     * \\brief Constructor for the in",
            "to": "     * \\brief Constructor for the int"
        },
        {
            "from": "     * \\brief Constructor for the int",
            "input": "     * \\brief Constructor for the int",
            "to": "     * \\brief Constructor for the inte"
        },
        {
            "from": "     * \\brief Constructor for the inte",
            "input": "     * \\brief Constructor for the inte",
            "to": "     * \\brief Constructor for the inter"
        },
        {
            "from": "     * \\brief Constructor for the inter",
            "input": "     * \\brief Constructor for the inter",
            "to": "     * \\brief Constructor for the intera"
        },
        {
            "from": "     * \\brief Constructor for the intera",
            "input": "     * \\brief Constructor for the intera",
            "to": "     * \\brief Constructor for the interac"
        },
        {
            "from": "     * \\brief Constructor for the interac",
            "input": "     * \\brief Constructor for the interac",
            "to": "     * \\brief Constructor for the interact"
        },
        {
            "from": "     * \\brief Constructor for the interact",
            "input": "     * \\brief Constructor for the interact",
            "to": "     * \\brief Constructor for the interacti"
        },
        {
            "from": "     * \\brief Constructor for the interacti",
            "input": "     * \\brief Constructor for the interacti",
            "to": "     * \\brief Constructor for the interactiv"
        },
        {
            "from": "     * \\brief Constructor for the interactiv",
            "input": "     * \\brief Constructor for the interactiv",
            "to": "     * \\brief Constructor for the interactive"
        },
        {
            "from": "     * \\brief Constructor for the interactive",
            "input": "     * \\brief Constructor for the interactive",
            "to": "     * \\brief Constructor for the interactive "
        },
        {
            "from": "     * \\brief Constructor for the interactive ",
            "input": "     * \\brief Constructor for the interactive ",
            "to": "     * \\brief Constructor for the interactive d"
        },
        {
            "from": "     * \\brief Constructor for the interactive d",
            "input": "     * \\brief Constructor for the interactive d",
            "to": "     * \\brief Constructor for the interactive di"
        },
        {
            "from": "     * \\brief Constructor for the interactive di",
            "input": "     * \\brief Constructor for the interactive di",
            "to": "     * \\brief Constructor for the interactive dic"
        },
        {
            "from": "     * \\brief Constructor for the interactive dic",
            "input": "     * \\brief Constructor for the interactive dic",
            "to": "     * \\brief Constructor for the interactive dict"
        },
        {
            "from": "     * \\brief Constructor for the interactive dict",
            "input": "     * \\brief Constructor for the interactive dict",
            "to": "     * \\brief Constructor for the interactive dicti"
        },
        {
            "from": "     * \\brief Constructor for the interactive dicti",
            "input": "     * \\brief Constructor for the interactive dicti",
            "to": "     * \\brief Constructor for the interactive dictio"
        },
        {
            "from": "     * \\brief Constructor for the interactive dictio",
            "input": "     * \\brief Constructor for the interactive dictio",
            "to": "     * \\brief Constructor for the interactive diction"
        },
        {
            "from": "     * \\brief Constructor for the interactive diction",
            "input": "     * \\brief Constructor for the interactive diction",
            "to": "     * \\brief Constructor for the interactive dictiona"
        },
        {
            "from": "     * \\brief Constructor for the interactive dictiona",
            "input": "     * \\brief Constructor for the interactive dictiona",
            "to": "     * \\brief Constructor for the interactive dictionar"
        },
        {
            "from": "     * \\brief Constructor for the interactive dictionar",
            "input": "     * \\brief Constructor for the interactive dictionar",
            "to": "     * \\brief Constructor for the interactive dictionary"
        },
        {
            "from": "     * \\brief Constructor for the interactive dictionary",
            "input": "     * \\brief Constructor for the interactive dictionary",
            "to": "     * \\brief Constructor for the interactive dictionary "
        },
        {
            "from": "     * \\brief Constructor for the interactive dictionary ",
            "input": "     * \\brief Constructor for the interactive dictionary ",
            "to": "     * \\brief Constructor for the interactive dictionary s"
        },
        {
            "from": "     * \\brief Constructor for the interactive dictionary s",
            "input": "     * \\brief Constructor for the interactive dictionary s",
            "to": "     * \\brief Constructor for the interactive dictionary sh"
        },
        {
            "from": "     * \\brief Constructor for the interactive dictionary sh",
            "input": "     * \\brief Constructor for the interactive dictionary sh",
            "to": "     * \\brief Constructor for the interactive dictionary she"
        },
        {
            "from": "     * \\brief Constructor for the interactive dictionary she",
            "input": "     * \\brief Constructor for the interactive dictionary she",
            "to": "     * \\brief Constructor for the interactive dictionary shel"
        },
        {
            "from": "     * \\brief Constructor for the interactive dictionary shel",
            "input": "     * \\brief Constructor for the interactive dictionary shel",
            "to": "     * \\brief Constructor for the interactive dictionary shell"
        },
        {
            "from": "     * \\brief D",
            "input": "     * \\brief D",
            "to": "     * \\brief De"
        },
        {
            "from": "     * \\brief De",
            "input": "     * \\brief De",
            "to": "     * \\brief Des"
        },
        {
            "from": "     * \\brief Des",
            "input": "     * \\brief Des",
            "to": "     * \\brief Dest"
        },
        {
            "from": "     * \\brief Dest",
            "input": "     * \\brief Dest",
            "to": "     * \\brief Destr"
        },
        {
            "from": "     * \\brief Destr",
            "input": "     * \\brief Destr",
            "to": "     * \\brief Destru"
        },
        {
            "from": "     * \\brief Destru",
            "input": "     * \\brief Destru",
            "to": "     * \\brief Destruc"
        },
        {
            "from": "     * \\brief Destruc",
            "input": "     * \\brief Destruc",
            "to": "     * \\brief Destruct"
        },
        {
            "from": "     * \\brief Destruct",
            "input": "     * \\brief Destruct",
            "to": "     * \\brief Destructo"
        },
        {
            "from": "     * \\brief Destructo",
            "input": "     * \\brief Destructo",
            "to": "     * \\brief Destructor"
        },
        {
            "from": "     * \\brief Destructor",
            "input": "     * \\brief Destructor",
            "to": "     * \\brief Destructor "
        },
        {
            "from": "     * \\brief Destructor ",
            "input": "     * \\brief Destructor ",
            "to": "     * \\brief Destructor f"
        },
        {
            "from": "     * \\brief Destructor f",
            "input": "     * \\brief Destructor f",
            "to": "     * \\brief Destructor fo"
        },
        {
            "from": "     * \\brief Destructor fo",
            "input": "     * \\brief Destructor fo",
            "to": "     * \\brief Destructor for"
        },
        {
            "from": "     * \\brief Destructor for",
            "input": "     * \\brief Destructor for",
            "to": "     * \\brief Destructor for "
        },
        {
            "from": "     * \\brief Destructor for ",
            "input": "     * \\brief Destructor for ",
            "to": "     * \\brief Destructor for t"
        },
        {
            "from": "     * \\brief Destructor for t",
            "input": "     * \\brief Destructor for t",
            "to": "     * \\brief Destructor for th"
        },
        {
            "from": "     * \\brief Destructor for th",
            "input": "     * \\brief Destructor for th",
            "to": "     * \\brief Destructor for the"
        },
        {
            "from": "     * \\brief Destructor for the",
            "input": "     * \\brief Destructor for the",
            "to": "     * \\brief Destructor for the "
        },
        {
            "from": "     * \\brief Destructor for the ",
            "input": "     * \\brief Destructor for the ",
            "to": "     * \\brief Destructor for the i"
        },
        {
            "from": "     * \\brief Destructor for the i",
            "input": "     * \\brief Destructor for the i",
            "to": "     * \\brief Destructor for the in"
        },
        {
            "from": "     * \\brief Destructor for the in",
            "input": "     * \\brief Destructor for the in",
            "to": "     * \\brief Destructor for the int"
        },
        {
            "from": "     * \\brief Destructor for the int",
            "input": "     * \\brief Destructor for the int",
            "to": "     * \\brief Destructor for the inte"
        },
        {
            "from": "     * \\brief Destructor for the inte",
            "input": "     * \\brief Destructor for the inte",
            "to": "     * \\brief Destructor for the inter"
        },
        {
            "from": "     * \\brief Destructor for the inter",
            "input": "     * \\brief Destructor for the inter",
            "to": "     * \\brief Destructor for the intera"
        },
        {
            "from": "     * \\brief Destructor for the intera",
            "input": "     * \\brief Destructor for the intera",
            "to": "     * \\brief Destructor for the interac"
        },
        {
            "from": "     * \\brief Destructor for the interac",
            "input": "     * \\brief Destructor for the interac",
            "to": "     * \\brief Destructor for the interact"
        },
        {
            "from": "     * \\brief Destructor for the interact",
            "input": "     * \\brief Destructor for the interact",
            "to": "     * \\brief Destructor for the interacti"
        },
        {
            "from": "     * \\brief Destructor for the interacti",
            "input": "     * \\brief Destructor for the interacti",
            "to": "     * \\brief Destructor for the interactiv"
        },
        {
            "from": "     * \\brief Destructor for the interactiv",
            "input": "     * \\brief Destructor for the interactiv",
            "to": "     * \\brief Destructor for the interactive"
        },
        {
            "from": "     * \\brief Destructor for the interactive",
            "input": "     * \\brief Destructor for the interactive",
            "to": "     * \\brief Destructor for the interactive "
        },
        {
            "from": "     * \\brief Destructor for the interactive ",
            "input": "     * \\brief Destructor for the interactive ",
            "to": "     * \\brief Destructor for the interactive d"
        },
        {
            "from": "     * \\brief Destructor for the interactive d",
            "input": "     * \\brief Destructor for the interactive d",
            "to": "     * \\brief Destructor for the interactive di"
        },
        {
            "from": "     * \\brief Destructor for the interactive di",
            "input": "     * \\brief Destructor for the interactive di",
            "to": "     * \\brief Destructor for the interactive dic"
        },
        {
            "from": "     * \\brief Destructor for the interactive dic",
            "input": "     * \\brief Destructor for the interactive dic",
            "to": "     * \\brief Destructor for the interactive dict"
        },
        {
            "from": "     * \\brief Destructor for the interactive dict",
            "input": "     * \\brief Destructor for the interactive dict",
            "to": "     * \\brief Destructor for the interactive dicti"
        },
        {
            "from": "     * \\brief Destructor for the interactive dicti",
            "input": "     * \\brief Destructor for the interactive dicti",
            "to": "     * \\brief Destructor for the interactive dictio"
        },
        {
            "from": "     * \\brief Destructor for the interactive dictio",
            "input": "     * \\brief Destructor for the interactive dictio",
            "to": "     * \\brief Destructor for the interactive diction"
        },
        {
            "from": "     * \\brief Destructor for the interactive diction",
            "input": "     * \\brief Destructor for the interactive diction",
            "to": "     * \\brief Destructor for the interactive dictiona"
        },
        {
            "from": "     * \\brief Destructor for the interactive dictiona",
            "input": "     * \\brief Destructor for the interactive dictiona",
            "to": "     * \\brief Destructor for the interactive dictionar"
        },
        {
            "from": "     * \\brief Destructor for the interactive dictionar",
            "input": "     * \\brief Destructor for the interactive dictionar",
            "to": "     * \\brief Destructor for the interactive dictionary"
        },
        {
            "from": "     * \\brief Destructor for the interactive dictionary",
            "input": "     * \\brief Destructor for the interactive dictionary",
            "to": "     * \\brief Destructor for the interactive dictionary "
        },
        {
            "from": "     * \\brief Destructor for the interactive dictionary ",
            "input": "     * \\brief Destructor for the interactive dictionary ",
            "to": "     * \\brief Destructor for the interactive dictionary s"
        },
        {
            "from": "     * \\brief Destructor for the interactive dictionary s",
            "input": "     * \\brief Destructor for the interactive dictionary s",
            "to": "     * \\brief Destructor for the interactive dictionary sh"
        },
        {
            "from": "     * \\brief Destructor for the interactive dictionary sh",
            "input": "     * \\brief Destructor for the interactive dictionary sh",
            "to": "     * \\brief Destructor for the interactive dictionary she"
        },
        {
            "from": "     * \\brief Destructor for the interactive dictionary she",
            "input": "     * \\brief Destructor for the interactive dictionary she",
            "to": "     * \\brief Destructor for the interactive dictionary shel"
        },
        {
            "from": "     * \\brief Destructor for the interactive dictionary shel",
            "input": "     * \\brief Destructor for the interactive dictionary shel",
            "to": "     * \\brief Destructor for the interactive dictionary shell"
        },
        {
            "from": "     * \\brief L",
            "input": "     * \\brief L",
            "to": "     * \\brief La"
        },
        {
            "from": "     * \\brief La",
            "input": "     * \\brief La",
            "to": "     * \\brief Lau"
        },
        {
            "from": "     * \\brief Lau",
            "input": "     * \\brief Lau",
            "to": "     * \\brief Laun"
        },
        {
            "from": "     * \\brief Laun",
            "input": "     * \\brief Laun",
            "to": "     * \\brief Launc"
        },
        {
            "from": "     * \\brief Launc",
            "input": "     * \\brief Launc",
            "to": "     * \\brief Launch"
        },
        {
            "from": "     * \\brief Launch",
            "input": "     * \\brief Launch",
            "to": "     * \\brief Launche"
        },
        {
            "from": "     * \\brief Launche",
            "input": "     * \\brief Launche",
            "to": "     * \\brief Launches"
        },
        {
            "from": "     * \\brief Launches",
            "input": "     * \\brief Launches",
            "to": "     * \\brief Launches "
        },
        {
            "from": "     * \\brief Launches ",
            "input": "     * \\brief Launches ",
            "to": "     * \\brief Launches t"
        },
        {
            "from": "     * \\brief Launches t",
            "input": "     * \\brief Launches t",
            "to": "     * \\brief Launches th"
        },
        {
            "from": "     * \\brief Launches th",
            "input": "     * \\brief Launches th",
            "to": "     * \\brief Launches the"
        },
        {
            "from": "     * \\brief Launches the",
            "input": "     * \\brief Launches the",
            "to": "     * \\brief Launches the "
        },
        {
            "from": "     * \\brief Launches the ",
            "input": "     * \\brief Launches the ",
            "to": "     * \\brief Launches the i"
        },
        {
            "from": "     * \\brief Launches the i",
            "input": "     * \\brief Launches the i",
            "to": "     * \\brief Launches the in"
        },
        {
            "from": "     * \\brief Launches the in",
            "input": "     * \\brief Launches the in",
            "to": "     * \\brief Launches the int"
        },
        {
            "from": "     * \\brief Launches the int",
            "input": "     * \\brief Launches the int",
            "to": "     * \\brief Launches the inte"
        },
        {
            "from": "     * \\brief Launches the inte",
            "input": "     * \\brief Launches the inte",
            "to": "     * \\brief Launches the inter"
        },
        {
            "from": "     * \\brief Launches the inter",
            "input": "     * \\brief Launches the inter",
            "to": "     * \\brief Launches the intera"
        },
        {
            "from": "     * \\brief Launches the intera",
            "input": "     * \\brief Launches the intera",
            "to": "     * \\brief Launches the interac"
        },
        {
            "from": "     * \\brief Launches the interac",
            "input": "     * \\brief Launches the interac",
            "to": "     * \\brief Launches the interact"
        },
        {
            "from": "     * \\brief Launches the interact",
            "input": "     * \\brief Launches the interact",
            "to": "     * \\brief Launches the interacti"
        },
        {
            "from": "     * \\brief Launches the interacti",
            "input": "     * \\brief Launches the interacti",
            "to": "     * \\brief Launches the interactiv"
        },
        {
            "from": "     * \\brief Launches the interactiv",
            "input": "     * \\brief Launches the interactiv",
            "to": "     * \\brief Launches the interactive"
        },
        {
            "from": "     * \\brief Launches the interactive",
            "input": "     * \\brief Launches the interactive",
            "to": "     * \\brief Launches the interactive "
        },
        {
            "from": "     * \\brief Launches the interactive ",
            "input": "     * \\brief Launches the interactive ",
            "to": "     * \\brief Launches the interactive d"
        },
        {
            "from": "     * \\brief Launches the interactive d",
            "input": "     * \\brief Launches the interactive d",
            "to": "     * \\brief Launches the interactive di"
        },
        {
            "from": "     * \\brief Launches the interactive di",
            "input": "     * \\brief Launches the interactive di",
            "to": "     * \\brief Launches the interactive dic"
        },
        {
            "from": "     * \\brief Launches the interactive dic",
            "input": "     * \\brief Launches the interactive dic",
            "to": "     * \\brief Launches the interactive dict"
        },
        {
            "from": "     * \\brief Launches the interactive dict",
            "input": "     * \\brief Launches the interactive dict",
            "to": "     * \\brief Launches the interactive dicti"
        },
        {
            "from": "     * \\brief Launches the interactive dicti",
            "input": "     * \\brief Launches the interactive dicti",
            "to": "     * \\brief Launches the interactive dictio"
        },
        {
            "from": "     * \\brief Launches the interactive dictio",
            "input": "     * \\brief Launches the interactive dictio",
            "to": "     * \\brief Launches the interactive diction"
        },
        {
            "from": "     * \\brief Launches the interactive diction",
            "input": "     * \\brief Launches the interactive diction",
            "to": "     * \\brief Launches the interactive dictiona"
        },
        {
            "from": "     * \\brief Launches the interactive dictiona",
            "input": "     * \\brief Launches the interactive dictiona",
            "to": "     * \\brief Launches the interactive dictionar"
        },
        {
            "from": "     * \\brief Launches the interactive dictionar",
            "input": "     * \\brief Launches the interactive dictionar",
            "to": "     * \\brief Launches the interactive dictionary"
        },
        {
            "from": "     * \\brief Launches the interactive dictionary",
            "input": "     * \\brief Launches the interactive dictionary",
            "to": "     * \\brief Launches the interactive dictionary "
        },
        {
            "from": "     * \\brief Launches the interactive dictionary ",
            "input": "     * \\brief Launches the interactive dictionary ",
            "to": "     * \\brief Launches the interactive dictionary s"
        },
        {
            "from": "     * \\brief Launches the interactive dictionary s",
            "input": "     * \\brief Launches the interactive dictionary s",
            "to": "     * \\brief Launches the interactive dictionary sh"
        },
        {
            "from": "     * \\brief Launches the interactive dictionary sh",
            "input": "     * \\brief Launches the interactive dictionary sh",
            "to": "     * \\brief Launches the interactive dictionary she"
        },
        {
            "from": "     * \\brief Launches the interactive dictionary she",
            "input": "     * \\brief Launches the interactive dictionary she",
            "to": "     * \\brief Launches the interactive dictionary shel"
        },
        {
            "from": "     * \\brief Launches the interactive dictionary shel",
            "input": "     * \\brief Launches the interactive dictionary shel",
            "to": "     * \\brief Launches the interactive dictionary shell"
        },
        {
            "from": "    /",
            "input": "    /",
            "to": "    /*"
        },
        {
            "from": "    /*",
            "input": "    /*",
            "to": "    /**"
        },
        {
            "from": "    S",
            "input": "    S",
            "to": "    Sh"
        },
        {
            "from": "    Sh",
            "input": "    Sh",
            "to": "    She"
        },
        {
            "from": "    She",
            "input": "    She",
            "to": "    Shel"
        },
        {
            "from": "    Shel",
            "input": "    Shel",
            "to": "    Shell"
        },
        {
            "from": "    Shell",
            "input": "    Shell",
            "to": "    Shell("
        },
        {
            "from": "    Shell(",
            "input": "    Shell(",
            "to": "    Shell()"
        },
        {
            "from": "    Shell()",
            "input": "    Shell()",
            "to": "    Shell();"
        },
        {
            "from": "    W",
            "input": "    W",
            "to": "    Wo"
        },
        {
            "from": "    Wo",
            "input": "    Wo",
            "to": "    Woo"
        },
        {
            "from": "    Woo",
            "input": "    Woo",
            "to": "    Woor"
        },
        {
            "from": "    Woor",
            "input": "    Woor",
            "to": "    Woord"
        },
        {
            "from": "    Woord",
            "input": "    Woord",
            "to": "    Woorde"
        },
        {
            "from": "    Woorde",
            "input": "    Woorde",
            "to": "    Woorden"
        },
        {
            "from": "    Woorden",
            "input": "    Woorden",
            "to": "    Woordenb"
        },
        {
            "from": "    Woordenb",
            "input": "    Woordenb",
            "to": "    Woordenbo"
        },
        {
            "from": "    Woordenbo",
            "input": "    Woordenbo",
            "to": "    Woordenboe"
        },
        {
            "from": "    Woordenboe",
            "input": "    Woordenboe",
            "to": "    Woordenboek"
        },
        {
            "from": "    Woordenboek",
            "input": "    Woordenboek",
            "to": "    Woordenboek*"
        },
        {
            "from": "    Woordenboek*",
            "input": "    Woordenboek*",
            "to": "    Woordenboek* "
        },
        {
            "from": "    Woordenboek* ",
            "input": "    Woordenboek* ",
            "to": "    Woordenboek* d"
        },
        {
            "from": "    Woordenboek* d",
            "input": "    Woordenboek* d",
            "to": "    Woordenboek* di"
        },
        {
            "from": "    Woordenboek* di",
            "input": "    Woordenboek* di",
            "to": "    Woordenboek* dic"
        },
        {
            "from": "    Woordenboek* dic",
            "input": "    Woordenboek* dic",
            "to": "    Woordenboek* dict"
        },
        {
            "from": "    Woordenboek* dict",
            "input": "    Woordenboek* dict",
            "to": "    Woordenboek* dicti"
        },
        {
            "from": "    Woordenboek* dicti",
            "input": "    Woordenboek* dicti",
            "to": "    Woordenboek* dictio"
        },
        {
            "from": "    Woordenboek* dictio",
            "input": "    Woordenboek* dictio",
            "to": "    Woordenboek* diction"
        },
        {
            "from": "    Woordenboek* diction",
            "input": "    Woordenboek* diction",
            "to": "    Woordenboek* dictiona"
        },
        {
            "from": "    Woordenboek* dictiona",
            "input": "    Woordenboek* dictiona",
            "to": "    Woordenboek* dictionar"
        },
        {
            "from": "    Woordenboek* dictionar",
            "input": "    Woordenboek* dictionar",
            "to": "    Woordenboek* dictionary"
        },
        {
            "from": "    Woordenboek* dictionary",
            "input": "    Woordenboek* dictionary",
            "to": "    Woordenboek* dictionary;"
        },
        {
            "from": "    b",
            "input": "    b",
            "to": "    bo"
        },
        {
            "from": "    bo",
            "input": "    bo",
            "to": "    boo"
        },
        {
            "from": "    boo",
            "input": "    boo",
            "to": "    bool"
        },
        {
            "from": "    bool",
            "input": "    bool",
            "to": "    bool "
        },
        {
            "from": "    bool ",
            "input": "    bool ",
            "to": "    bool r"
        },
        {
            "from": "    bool r",
            "input": "    bool r",
            "to": "    bool ru"
        },
        {
            "from": "    bool ru",
            "input": "    bool ru",
            "to": "    bool run"
        },
        {
            "from": "    bool run",
            "input": "    bool run",
            "to": "    bool runn"
        },
        {
            "from": "    bool runn",
            "input": "    bool runn",
            "to": "    bool runni"
        },
        {
            "from": "    bool runni",
            "input": "    bool runni",
            "to": "    bool runnin"
        },
        {
            "from": "    bool runnin",
            "input": "    bool runnin",
            "to": "    bool running"
        },
        {
            "from": "    bool running",
            "input": "    bool running",
            "to": "    bool running;"
        },
        {
            "from": "    s",
            "input": "    s",
            "to": "    st"
        },
        {
            "from": "    st",
            "input": "    st",
            "to": "    std"
        },
        {
            "from": "    std",
            "input": "    std",
            "to": "    std:"
        },
        {
            "from": "    std:",
            "input": "    std:",
            "to": "    std::"
        },
        {
            "from": "    std::",
            "input": "    std::",
            "to": "    std::s"
        },
        {
            "from": "    std::s",
            "input": "    std::s",
            "to": "    std::st"
        },
        {
            "from": "    std::st",
            "input": "    std::st",
            "to": "    std::str"
        },
        {
            "from": "    std::str",
            "input": "    std::str",
            "to": "    std::stri"
        },
        {
            "from": "    std::stri",
            "input": "    std::stri",
            "to": "    std::strin"
        },
        {
            "from": "    std::strin",
            "input": "    std::strin",
            "to": "    std::string"
        },
        {
            "from": "    std::string",
            "input": "    std::string",
            "to": "    std::string "
        },
        {
            "from": "    std::string ",
            "input": "    std::string ",
            "to": "    std::string p"
        },
        {
            "from": "    std::string p",
            "input": "    std::string p",
            "to": "    std::string pr"
        },
        {
            "from": "    std::string pr",
            "input": "    std::string pr",
            "to": "    std::string pro"
        },
        {
            "from": "    std::string pro",
            "input": "    std::string pro",
            "to": "    std::string prom"
        },
        {
            "from": "    std::string prom",
            "input": "    std::string prom",
            "to": "    std::string promp"
        },
        {
            "from": "    std::string promp",
            "input": "    std::string promp",
            "to": "    std::string prompt"
        },
        {
            "from": "    std::string prompt",
            "input": "    std::string prompt",
            "to": "    std::string prompt;"
        },
        {
            "from": "    v",
            "input": "    v",
            "to": "    vo"
        },
        {
            "from": "    vo",
            "input": "    vo",
            "to": "    voi"
        },
        {
            "from": "    voi",
            "input": "    voi",
            "to": "    void"
        },
        {
            "from": "    void",
            "input": "    void",
            "to": "    void "
        },
        {
            "from": "    void ",
            "input": "    void ",
            "to": "    void l"
        },
        {
            "from": "    void l",
            "input": "    void l",
            "to": "    void la"
        },
        {
            "from": "    void la",
            "input": "    void la",
            "to": "    void lau"
        },
        {
            "from": "    void lau",
            "input": "    void lau",
            "to": "    void laun"
        },
        {
            "from": "    void laun",
            "input": "    void laun",
            "to": "    void launc"
        },
        {
            "from": "    void launc",
            "input": "    void launc",
            "to": "    void launch"
        },
        {
            "from": "    void launch",
            "input": "    void launch",
            "to": "    void launch("
        },
        {
            "from": "    void launch(",
            "input": "    void launch(",
            "to": "    void launch()"
        },
        {
            "from": "    void launch()",
            "input": "    void launch()",
            "to": "    void launch();"
        },
        {
            "from": "    void r",
            "input": "    void r",
            "to": "    void ru"
        },
        {
            "from": "    void ru",
            "input": "    void ru",
            "to": "    void run"
        },
        {
            "from": "    void run",
            "input": "    void run",
            "to": "    void run_"
        },
        {
            "from": "    void run_",
            "input": "    void run_",
            "to": "    void run_l"
        },
        {
            "from": "    void run_a",
            "input": "    void run_a",
            "to": "    void run_ad"
        },
        {
            "from": "    void run_ad",
            "input": "    void run_ad",
            "to": "    void run_add"
        },
        {
            "from": "    void run_add",
            "input": "    void run_add",
            "to": "    void run_add("
        },
        {
            "from": "    void run_add(",
            "input": "    void run_add(",
            "to": "    void run_add(s"
        },
        {
            "from": "    void run_add(s",
            "input": "    void run_add(s",
            "to": "    void run_add(st"
        },
        {
            "from": "    void run_add(st",
            "input": "    void run_add(st",
            "to": "    void run_add(std"
        },
        {
            "from": "    void run_add(std",
            "input": "    void run_add(std",
            "to": "    void run_add(std:"
        },
        {
            "from": "    void run_add(std:",
            "input": "    void run_add(std:",
            "to": "    void run_add(std::"
        },
        {
            "from": "    void run_add(std::",
            "input": "    void run_add(std::",
            "to": "    void run_add(std::v"
        },
        {
            "from": "    void run_add(std::v",
            "input": "    void run_add(std::v",
            "to": "    void run_add(std::ve"
        },
        {
            "from": "    void run_add(std::ve",
            "input": "    void run_add(std::ve",
            "to": "    void run_add(std::vec"
        },
        {
            "from": "    void run_add(std::vec",
            "input": "    void run_add(std::vec",
            "to": "    void run_add(std::vect"
        },
        {
            "from": "    void run_add(std::vect",
            "input": "    void run_add(std::vect",
            "to": "    void run_add(std::vecto"
        },
        {
            "from": "    void run_add(std::vecto",
            "input": "    void run_add(std::vecto",
            "to": "    void run_add(std::vector"
        },
        {
            "from": "    void run_add(std::vector",
            "input": "    void run_add(std::vector",
            "to": "    void run_add(std::vector<"
        },
        {
            "from": "    void run_add(std::vector<",
            "input": "    void run_add(std::vector<",
            "to": "    void run_add(std::vector<s"
        },
        {
            "from": "    void run_add(std::vector<s",
            "input": "    void run_add(std::vector<s",
            "to": "    void run_add(std::vector<st"
        },
        {
            "from": "    void run_add(std::vector<st",
            "input": "    void run_add(std::vector<st",
            "to": "    void run_add(std::vector<std"
        },
        {
            "from": "    void run_add(std::vector<std",
            "input": "    void run_add(std::vector<std",
            "to": "    void run_add(std::vector<std:"
        },
        {
            "from": "    void run_add(std::vector<std:",
            "input": "    void run_add(std::vector<std:",
            "to": "    void run_add(std::vector<std::"
        },
        {
            "from": "    void run_add(std::vector<std::",
            "input": "    void run_add(std::vector<std::",
            "to": "    void run_add(std::vector<std::s"
        },
        {
            "from": "    void run_add(std::vector<std::s",
            "input": "    void run_add(std::vector<std::s",
            "to": "    void run_add(std::vector<std::st"
        },
        {
            "from": "    void run_add(std::vector<std::st",
            "input": "    void run_add(std::vector<std::st",
            "to": "    void run_add(std::vector<std::str"
        },
        {
            "from": "    void run_add(std::vector<std::str",
            "input": "    void run_add(std::vector<std::str",
            "to": "    void run_add(std::vector<std::stri"
        },
        {
            "from": "    void run_add(std::vector<std::stri",
            "input": "    void run_add(std::vector<std::stri",
            "to": "    void run_add(std::vector<std::strin"
        },
        {
            "from": "    void run_add(std::vector<std::strin",
            "input": "    void run_add(std::vector<std::strin",
            "to": "    void run_add(std::vector<std::string"
        },
        {
            "from": "    void run_add(std::vector<std::string",
            "input": "    void run_add(std::vector<std::string",
            "to": "    void run_add(std::vector<std::string>"
        },
        {
            "from": "    void run_add(std::vector<std::string>",
            "input": "    void run_add(std::vector<std::string>",
            "to": "    void run_add(std::vector<std::string> "
        },
        {
            "from": "    void run_add(std::vector<std::string> ",
            "input": "    void run_add(std::vector<std::string> ",
            "to": "    void run_add(std::vector<std::string> &"
        },
        {
            "from": "    void run_add(std::vector<std::string> &",
            "input": "    void run_add(std::vector<std::string> &",
            "to": "    void run_add(std::vector<std::string> &a"
        },
        {
            "from": "    void run_add(std::vector<std::string> &a",
            "input": "    void run_add(std::vector<std::string> &a",
            "to": "    void run_add(std::vector<std::string> &ar"
        },
        {
            "from": "    void run_add(std::vector<std::string> &ar",
            "input": "    void run_add(std::vector<std::string> &ar",
            "to": "    void run_add(std::vector<std::string> &arg"
        },
        {
            "from": "    void run_add(std::vector<std::string> &arg",
            "input": "    void run_add(std::vector<std::string> &arg",
            "to": "    void run_add(std::vector<std::string> &args"
        },
        {
            "from": "    void run_add(std::vector<std::string> &args",
            "input": "    void run_add(std::vector<std::string> &args",
            "to": "    void run_add(std::vector<std::string> &args)"
        },
        {
            "from": "    void run_add(std::vector<std::string> &args)",
            "input": "    void run_add(std::vector<std::string> &args)",
            "to": "    void run_add(std::vector<std::string> &args);"
        },
        {
            "from": "    void run_c",
            "input": "    void run_c",
            "to": "    void run_ch"
        },
        {
            "from": "    void run_ch",
            "input": "    void run_ch",
            "to": "    void run_che"
        },
        {
            "from": "    void run_che",
            "input": "    void run_che",
            "to": "    void run_chec"
        },
        {
            "from": "    void run_chec",
            "input": "    void run_chec",
            "to": "    void run_check"
        },
        {
            "from": "    void run_check",
            "input": "    void run_check",
            "to": "    void run_check_"
        },
        {
            "from": "    void run_check_",
            "input": "    void run_check_",
            "to": "    void run_check_t"
        },
        {
            "from": "    void run_check_t",
            "input": "    void run_check_t",
            "to": "    void run_check_te"
        },
        {
            "from": "    void run_check_te",
            "input": "    void run_check_te",
            "to": "    void run_check_tex"
        },
        {
            "from": "    void run_check_tex",
            "input": "    void run_check_tex",
            "to": "    void run_check_text"
        },
        {
            "from": "    void run_check_text",
            "input": "    void run_check_text",
            "to": "    void run_check_text("
        },
        {
            "from": "    void run_check_text(",
            "input": "    void run_check_text(",
            "to": "    void run_check_text(s"
        },
        {
            "from": "    void run_check_text(s",
            "input": "    void run_check_text(s",
            "to": "    void run_check_text(st"
        },
        {
            "from": "    void run_check_text(st",
            "input": "    void run_check_text(st",
            "to": "    void run_check_text(std"
        },
        {
            "from": "    void run_check_text(std",
            "input": "    void run_check_text(std",
            "to": "    void run_check_text(std:"
        },
        {
            "from": "    void run_check_text(std:",
            "input": "    void run_check_text(std:",
            "to": "    void run_check_text(std::"
        },
        {
            "from": "    void run_check_text(std::",
            "input": "    void run_check_text(std::",
            "to": "    void run_check_text(std::v"
        },
        {
            "from": "    void run_check_text(std::v",
            "input": "    void run_check_text(std::v",
            "to": "    void run_check_text(std::ve"
        },
        {
            "from": "    void run_check_text(std::ve",
            "input": "    void run_check_text(std::ve",
            "to": "    void run_check_text(std::vec"
        },
        {
            "from": "    void run_check_text(std::vec",
            "input": "    void run_check_text(std::vec",
            "to": "    void run_check_text(std::vect"
        },
        {
            "from": "    void run_check_text(std::vect",
            "input": "    void run_check_text(std::vect",
            "to": "    void run_check_text(std::vecto"
        },
        {
            "from": "    void run_check_text(std::vecto",
            "input": "    void run_check_text(std::vecto",
            "to": "    void run_check_text(std::vector"
        },
        {
            "from": "    void run_check_text(std::vector",
            "input": "    void run_check_text(std::vector",
            "to": "    void run_check_text(std::vector<"
        },
        {
            "from": "    void run_check_text(std::vector<",
            "input": "    void run_check_text(std::vector<",
            "to": "    void run_check_text(std::vector<s"
        },
        {
            "from": "    void run_check_text(std::vector<s",
            "input": "    void run_check_text(std::vector<s",
            "to": "    void run_check_text(std::vector<st"
        },
        {
            "from": "    void run_check_text(std::vector<st",
            "input": "    void run_check_text(std::vector<st",
            "to": "    void run_check_text(std::vector<std"
        },
        {
            "from": "    void run_check_text(std::vector<std",
            "input": "    void run_check_text(std::vector<std",
            "to": "    void run_check_text(std::vector<std:"
        },
        {
            "from": "    void run_check_text(std::vector<std:",
            "input": "    void run_check_text(std::vector<std:",
            "to": "    void run_check_text(std::vector<std::"
        },
        {
            "from": "    void run_check_text(std::vector<std::",
            "input": "    void run_check_text(std::vector<std::",
            "to": "    void run_check_text(std::vector<std::s"
        },
        {
            "from": "    void run_check_text(std::vector<std::s",
            "input": "    void run_check_text(std::vector<std::s",
            "to": "    void run_check_text(std::vector<std::st"
        },
        {
            "from": "    void run_check_text(std::vector<std::st",
            "input": "    void run_check_text(std::vector<std::st",
            "to": "    void run_check_text(std::vector<std::str"
        },
        {
            "from": "    void run_check_text(std::vector<std::str",
            "input": "    void run_check_text(std::vector<std::str",
            "to": "    void run_check_text(std::vector<std::stri"
        },
        {
            "from": "    void run_check_text(std::vector<std::stri",
            "input": "    void run_check_text(std::vector<std::stri",
            "to": "    void run_check_text(std::vector<std::strin"
        },
        {
            "from": "    void run_check_text(std::vector<std::strin",
            "input": "    void run_check_text(std::vector<std::strin",
            "to": "    void run_check_text(std::vector<std::string"
        },
        {
            "from": "    void run_check_text(std::vector<std::string",
            "input": "    void run_check_text(std::vector<std::string",
            "to": "    void run_check_text(std::vector<std::string>"
        },
        {
            "from": "    void run_check_text(std::vector<std::string>",
            "input": "    void run_check_text(std::vector<std::string>",
            "to": "    void run_check_text(std::vector<std::string> "
        },
        {
            "from": "    void run_check_text(std::vector<std::string> ",
            "input": "    void run_check_text(std::vector<std::string> ",
            "to": "    void run_check_text(std::vector<std::string> &"
        },
        {
            "from": "    void run_check_text(std::vector<std::string> &",
            "input": "    void run_check_text(std::vector<std::string> &",
            "to": "    void run_check_text(std::vector<std::string> &a"
        },
        {
            "from": "    void run_check_text(std::vector<std::string> &a",
            "input": "    void run_check_text(std::vector<std::string> &a",
            "to": "    void run_check_text(std::vector<std::string> &ar"
        },
        {
            "from": "    void run_check_text(std::vector<std::string> &ar",
            "input": "    void run_check_text(std::vector<std::string> &ar",
            "to": "    void run_check_text(std::vector<std::string> &arg"
        },
        {
            "from": "    void run_check_text(std::vector<std::string> &arg",
            "input": "    void run_check_text(std::vector<std::string> &arg",
            "to": "    void run_check_text(std::vector<std::string> &args"
        },
        {
            "from": "    void run_check_text(std::vector<std::string> &args",
            "input": "    void run_check_text(std::vector<std::string> &args",
            "to": "    void run_check_text(std::vector<std::string> &args)"
        },
        {
            "from": "    void run_check_text(std::vector<std::string> &args)",
            "input": "    void run_check_text(std::vector<std::string> &args)",
            "to": "    void run_check_text(std::vector<std::string> &args);"
        },
        {
            "from": "    void run_co",
            "input": "    void run_co",
            "to": "    void run_com"
        },
        {
            "from": "    void run_com",
            "input": "    void run_com",
            "to": "    void run_comb"
        },
        {
            "from": "    void run_comb",
            "input": "    void run_comb",
            "to": "    void run_combi"
        },
        {
            "from": "    void run_combi",
            "input": "    void run_combi",
            "to": "    void run_combin"
        },
        {
            "from": "    void run_combin",
            "input": "    void run_combin",
            "to": "    void run_combine"
        },
        {
            "from": "    void run_combine",
            "input": "    void run_combine",
            "to": "    void run_combine("
        },
        {
            "from": "    void run_combine(",
            "input": "    void run_combine(",
            "to": "    void run_combine(s"
        },
        {
            "from": "    void run_combine(s",
            "input": "    void run_combine(s",
            "to": "    void run_combine(st"
        },
        {
            "from": "    void run_combine(st",
            "input": "    void run_combine(st",
            "to": "    void run_combine(std"
        },
        {
            "from": "    void run_combine(std",
            "input": "    void run_combine(std",
            "to": "    void run_combine(std:"
        },
        {
            "from": "    void run_combine(std:",
            "input": "    void run_combine(std:",
            "to": "    void run_combine(std::"
        },
        {
            "from": "    void run_combine(std::",
            "input": "    void run_combine(std::",
            "to": "    void run_combine(std::v"
        },
        {
            "from": "    void run_combine(std::v",
            "input": "    void run_combine(std::v",
            "to": "    void run_combine(std::ve"
        },
        {
            "from": "    void run_combine(std::ve",
            "input": "    void run_combine(std::ve",
            "to": "    void run_combine(std::vec"
        },
        {
            "from": "    void run_combine(std::vec",
            "input": "    void run_combine(std::vec",
            "to": "    void run_combine(std::vect"
        },
        {
            "from": "    void run_combine(std::vect",
            "input": "    void run_combine(std::vect",
            "to": "    void run_combine(std::vecto"
        },
        {
            "from": "    void run_combine(std::vecto",
            "input": "    void run_combine(std::vecto",
            "to": "    void run_combine(std::vector"
        },
        {
            "from": "    void run_combine(std::vector",
            "input": "    void run_combine(std::vector",
            "to": "    void run_combine(std::vector<"
        },
        {
            "from": "    void run_combine(std::vector<",
            "input": "    void run_combine(std::vector<",
            "to": "    void run_combine(std::vector<s"
        },
        {
            "from": "    void run_combine(std::vector<s",
            "input": "    void run_combine(std::vector<s",
            "to": "    void run_combine(std::vector<st"
        },
        {
            "from": "    void run_combine(std::vector<st",
            "input": "    void run_combine(std::vector<st",
            "to": "    void run_combine(std::vector<std"
        },
        {
            "from": "    void run_combine(std::vector<std",
            "input": "    void run_combine(std::vector<std",
            "to": "    void run_combine(std::vector<std:"
        },
        {
            "from": "    void run_combine(std::vector<std:",
            "input": "    void run_combine(std::vector<std:",
            "to": "    void run_combine(std::vector<std::"
        },
        {
            "from": "    void run_combine(std::vector<std::",
            "input": "    void run_combine(std::vector<std::",
            "to": "    void run_combine(std::vector<std::s"
        },
        {
            "from": "    void run_combine(std::vector<std::s",
            "input": "    void run_combine(std::vector<std::s",
            "to": "    void run_combine(std::vector<std::st"
        },
        {
            "from": "    void run_combine(std::vector<std::st",
            "input": "    void run_combine(std::vector<std::st",
            "to": "    void run_combine(std::vector<std::str"
        },
        {
            "from": "    void run_combine(std::vector<std::str",
            "input": "    void run_combine(std::vector<std::str",
            "to": "    void run_combine(std::vector<std::stri"
        },
        {
            "from": "    void run_combine(std::vector<std::stri",
            "input": "    void run_combine(std::vector<std::stri",
            "to": "    void run_combine(std::vector<std::strin"
        },
        {
            "from": "    void run_combine(std::vector<std::strin",
            "input": "    void run_combine(std::vector<std::strin",
            "to": "    void run_combine(std::vector<std::string"
        },
        {
            "from": "    void run_combine(std::vector<std::string",
            "input": "    void run_combine(std::vector<std::string",
            "to": "    void run_combine(std::vector<std::string>"
        },
        {
            "from": "    void run_combine(std::vector<std::string>",
            "input": "    void run_combine(std::vector<std::string>",
            "to": "    void run_combine(std::vector<std::string> "
        },
        {
            "from": "    void run_combine(std::vector<std::string> ",
            "input": "    void run_combine(std::vector<std::string> ",
            "to": "    void run_combine(std::vector<std::string> &"
        },
        {
            "from": "    void run_combine(std::vector<std::string> &",
            "input": "    void run_combine(std::vector<std::string> &",
            "to": "    void run_combine(std::vector<std::string> &a"
        },
        {
            "from": "    void run_combine(std::vector<std::string> &a",
            "input": "    void run_combine(std::vector<std::string> &a",
            "to": "    void run_combine(std::vector<std::string> &ar"
        },
        {
            "from": "    void run_combine(std::vector<std::string> &ar",
            "input": "    void run_combine(std::vector<std::string> &ar",
            "to": "    void run_combine(std::vector<std::string> &arg"
        },
        {
            "from": "    void run_combine(std::vector<std::string> &arg",
            "input": "    void run_combine(std::vector<std::string> &arg",
            "to": "    void run_combine(std::vector<std::string> &args"
        },
        {
            "from": "    void run_combine(std::vector<std::string> &args",
            "input": "    void run_combine(std::vector<std::string> &args",
            "to": "    void run_combine(std::vector<std::string> &args)"
        },
        {
            "from": "    void run_combine(std::vector<std::string> &args)",
            "input": "    void run_combine(std::vector<std::string> &args)",
            "to": "    void run_combine(std::vector<std::string> &args);"
        },
        {
            "from": "    void run_e",
            "input": "    void run_e",
            "to": "    void run_ex"
        },
        {
            "from": "    void run_ex",
            "input": "    void run_ex",
            "to": "    void run_exi"
        },
        {
            "from": "    void run_exi",
            "input": "    void run_exi",
            "to": "    void run_exit"
        },
        {
            "from": "    void run_exit",
            "input": "    void run_exit",
            "to": "    void run_exit("
        },
        {
            "from": "    void run_exit(",
            "input": "    void run_exit(",
            "to": "    void run_exit()"
        },
        {
            "from": "    void run_exit()",
            "input": "    void run_exit()",
            "to": "    void run_exit();"
        },
        {
            "from": "    void run_h",
            "input": "    void run_h",
            "to": "    void run_he"
        },
        {
            "from": "    void run_he",
            "input": "    void run_he",
            "to": "    void run_hel"
        },
        {
            "from": "    void run_hel",
            "input": "    void run_hel",
            "to": "    void run_help"
        },
        {
            "from": "    void run_help",
            "input": "    void run_help",
            "to": "    void run_help("
        },
        {
            "from": "    void run_help(",
            "input": "    void run_help(",
            "to": "    void run_help()"
        },
        {
            "from": "    void run_help()",
            "input": "    void run_help()",
            "to": "    void run_help();"
        },
        {
            "from": "    void run_l",
            "input": "    void run_l",
            "to": "    void run_li"
        },
        {
            "from": "    void run_le",
            "input": "    void run_le",
            "to": "    void run_len"
        },
        {
            "from": "    void run_len",
            "input": "    void run_len",
            "to": "    void run_leng"
        },
        {
            "from": "    void run_leng",
            "input": "    void run_leng",
            "to": "    void run_lengt"
        },
        {
            "from": "    void run_lengt",
            "input": "    void run_lengt",
            "to": "    void run_length"
        },
        {
            "from": "    void run_length",
            "input": "    void run_length",
            "to": "    void run_length("
        },
        {
            "from": "    void run_length(",
            "input": "    void run_length(",
            "to": "    void run_length(s"
        },
        {
            "from": "    void run_length(s",
            "input": "    void run_length(s",
            "to": "    void run_length(st"
        },
        {
            "from": "    void run_length(st",
            "input": "    void run_length(st",
            "to": "    void run_length(std"
        },
        {
            "from": "    void run_length(std",
            "input": "    void run_length(std",
            "to": "    void run_length(std:"
        },
        {
            "from": "    void run_length(std:",
            "input": "    void run_length(std:",
            "to": "    void run_length(std::"
        },
        {
            "from": "    void run_length(std::",
            "input": "    void run_length(std::",
            "to": "    void run_length(std::v"
        },
        {
            "from": "    void run_length(std::v",
            "input": "    void run_length(std::v",
            "to": "    void run_length(std::ve"
        },
        {
            "from": "    void run_length(std::ve",
            "input": "    void run_length(std::ve",
            "to": "    void run_length(std::vec"
        },
        {
            "from": "    void run_length(std::vec",
            "input": "    void run_length(std::vec",
            "to": "    void run_length(std::vect"
        },
        {
            "from": "    void run_length(std::vect",
            "input": "    void run_length(std::vect",
            "to": "    void run_length(std::vecto"
        },
        {
            "from": "    void run_length(std::vecto",
            "input": "    void run_length(std::vecto",
            "to": "    void run_length(std::vector"
        },
        {
            "from": "    void run_length(std::vector",
            "input": "    void run_length(std::vector",
            "to": "    void run_length(std::vector<"
        },
        {
            "from": "    void run_length(std::vector<",
            "input": "    void run_length(std::vector<",
            "to": "    void run_length(std::vector<s"
        },
        {
            "from": "    void run_length(std::vector<s",
            "input": "    void run_length(std::vector<s",
            "to": "    void run_length(std::vector<st"
        },
        {
            "from": "    void run_length(std::vector<st",
            "input": "    void run_length(std::vector<st",
            "to": "    void run_length(std::vector<std"
        },
        {
            "from": "    void run_length(std::vector<std",
            "input": "    void run_length(std::vector<std",
            "to": "    void run_length(std::vector<std:"
        },
        {
            "from": "    void run_length(std::vector<std:",
            "input": "    void run_length(std::vector<std:",
            "to": "    void run_length(std::vector<std::"
        },
        {
            "from": "    void run_length(std::vector<std::",
            "input": "    void run_length(std::vector<std::",
            "to": "    void run_length(std::vector<std::s"
        },
        {
            "from": "    void run_length(std::vector<std::s",
            "input": "    void run_length(std::vector<std::s",
            "to": "    void run_length(std::vector<std::st"
        },
        {
            "from": "    void run_length(std::vector<std::st",
            "input": "    void run_length(std::vector<std::st",
            "to": "    void run_length(std::vector<std::str"
        },
        {
            "from": "    void run_length(std::vector<std::str",
            "input": "    void run_length(std::vector<std::str",
            "to": "    void run_length(std::vector<std::stri"
        },
        {
            "from": "    void run_length(std::vector<std::stri",
            "input": "    void run_length(std::vector<std::stri",
            "to": "    void run_length(std::vector<std::strin"
        },
        {
            "from": "    void run_length(std::vector<std::strin",
            "input": "    void run_length(std::vector<std::strin",
            "to": "    void run_length(std::vector<std::string"
        },
        {
            "from": "    void run_length(std::vector<std::string",
            "input": "    void run_length(std::vector<std::string",
            "to": "    void run_length(std::vector<std::string>"
        },
        {
            "from": "    void run_length(std::vector<std::string>",
            "input": "    void run_length(std::vector<std::string>",
            "to": "    void run_length(std::vector<std::string> "
        },
        {
            "from": "    void run_length(std::vector<std::string> ",
            "input": "    void run_length(std::vector<std::string> ",
            "to": "    void run_length(std::vector<std::string> &"
        },
        {
            "from": "    void run_length(std::vector<std::string> &",
            "input": "    void run_length(std::vector<std::string> &",
            "to": "    void run_length(std::vector<std::string> &a"
        },
        {
            "from": "    void run_length(std::vector<std::string> &a",
            "input": "    void run_length(std::vector<std::string> &a",
            "to": "    void run_length(std::vector<std::string> &ar"
        },
        {
            "from": "    void run_length(std::vector<std::string> &ar",
            "input": "    void run_length(std::vector<std::string> &ar",
            "to": "    void run_length(std::vector<std::string> &arg"
        },
        {
            "from": "    void run_length(std::vector<std::string> &arg",
            "input": "    void run_length(std::vector<std::string> &arg",
            "to": "    void run_length(std::vector<std::string> &args"
        },
        {
            "from": "    void run_length(std::vector<std::string> &args",
            "input": "    void run_length(std::vector<std::string> &args",
            "to": "    void run_length(std::vector<std::string> &args)"
        },
        {
            "from": "    void run_length(std::vector<std::string> &args)",
            "input": "    void run_length(std::vector<std::string> &args)",
            "to": "    void run_length(std::vector<std::string> &args);"
        },
        {
            "from": "    void run_li",
            "input": "    void run_li",
            "to": "    void run_lin"
        },
        {
            "from": "    void run_lin",
            "input": "    void run_lin",
            "to": "    void run_line"
        },
        {
            "from": "    void run_line",
            "input": "    void run_line",
            "to": "    void run_line("
        },
        {
            "from": "    void run_line(",
            "input": "    void run_line(",
            "to": "    void run_line(s"
        },
        {
            "from": "    void run_line(s",
            "input": "    void run_line(s",
            "to": "    void run_line(st"
        },
        {
            "from": "    void run_line(st",
            "input": "    void run_line(st",
            "to": "    void run_line(std"
        },
        {
            "from": "    void run_line(std",
            "input": "    void run_line(std",
            "to": "    void run_line(std:"
        },
        {
            "from": "    void run_line(std:",
            "input": "    void run_line(std:",
            "to": "    void run_line(std::"
        },
        {
            "from": "    void run_line(std::",
            "input": "    void run_line(std::",
            "to": "    void run_line(std::s"
        },
        {
            "from": "    void run_line(std::s",
            "input": "    void run_line(std::s",
            "to": "    void run_line(std::st"
        },
        {
            "from": "    void run_line(std::st",
            "input": "    void run_line(std::st",
            "to": "    void run_line(std::str"
        },
        {
            "from": "    void run_line(std::str",
            "input": "    void run_line(std::str",
            "to": "    void run_line(std::stri"
        },
        {
            "from": "    void run_line(std::stri",
            "input": "    void run_line(std::stri",
            "to": "    void run_line(std::strin"
        },
        {
            "from": "    void run_line(std::strin",
            "input": "    void run_line(std::strin",
            "to": "    void run_line(std::string"
        },
        {
            "from": "    void run_line(std::string",
            "input": "    void run_line(std::string",
            "to": "    void run_line(std::string "
        },
        {
            "from": "    void run_line(std::string ",
            "input": "    void run_line(std::string ",
            "to": "    void run_line(std::string &"
        },
        {
            "from": "    void run_line(std::string &",
            "input": "    void run_line(std::string &",
            "to": "    void run_line(std::string &c"
        },
        {
            "from": "    void run_line(std::string &c",
            "input": "    void run_line(std::string &c",
            "to": "    void run_line(std::string &cm"
        },
        {
            "from": "    void run_line(std::string &cm",
            "input": "    void run_line(std::string &cm",
            "to": "    void run_line(std::string &cmd"
        },
        {
            "from": "    void run_line(std::string &cmd",
            "input": "    void run_line(std::string &cmd",
            "to": "    void run_line(std::string &cmd)"
        },
        {
            "from": "    void run_line(std::string &cmd)",
            "input": "    void run_line(std::string &cmd)",
            "to": "    void run_line(std::string &cmd);"
        },
        {
            "from": "    void run_lo",
            "input": "    void run_lo",
            "to": "    void run_loa"
        },
        {
            "from": "    void run_loa",
            "input": "    void run_loa",
            "to": "    void run_load"
        },
        {
            "from": "    void run_load",
            "input": "    void run_load",
            "to": "    void run_load("
        },
        {
            "from": "    void run_load(",
            "input": "    void run_load(",
            "to": "    void run_load(s"
        },
        {
            "from": "    void run_load(s",
            "input": "    void run_load(s",
            "to": "    void run_load(st"
        },
        {
            "from": "    void run_load(st",
            "input": "    void run_load(st",
            "to": "    void run_load(std"
        },
        {
            "from": "    void run_load(std",
            "input": "    void run_load(std",
            "to": "    void run_load(std:"
        },
        {
            "from": "    void run_load(std:",
            "input": "    void run_load(std:",
            "to": "    void run_load(std::"
        },
        {
            "from": "    void run_load(std::",
            "input": "    void run_load(std::",
            "to": "    void run_load(std::v"
        },
        {
            "from": "    void run_load(std::v",
            "input": "    void run_load(std::v",
            "to": "    void run_load(std::ve"
        },
        {
            "from": "    void run_load(std::ve",
            "input": "    void run_load(std::ve",
            "to": "    void run_load(std::vec"
        },
        {
            "from": "    void run_load(std::vec",
            "input": "    void run_load(std::vec",
            "to": "    void run_load(std::vect"
        },
        {
            "from": "    void run_load(std::vect",
            "input": "    void run_load(std::vect",
            "to": "    void run_load(std::vecto"
        },
        {
            "from": "    void run_load(std::vecto",
            "input": "    void run_load(std::vecto",
            "to": "    void run_load(std::vector"
        },
        {
            "from": "    void run_load(std::vector",
            "input": "    void run_load(std::vector",
            "to": "    void run_load(std::vector<"
        },
        {
            "from": "    void run_load(std::vector<",
            "input": "    void run_load(std::vector<",
            "to": "    void run_load(std::vector<s"
        },
        {
            "from": "    void run_load(std::vector<s",
            "input": "    void run_load(std::vector<s",
            "to": "    void run_load(std::vector<st"
        },
        {
            "from": "    void run_load(std::vector<st",
            "input": "    void run_load(std::vector<st",
            "to": "    void run_load(std::vector<std"
        },
        {
            "from": "    void run_load(std::vector<std",
            "input": "    void run_load(std::vector<std",
            "to": "    void run_load(std::vector<std:"
        },
        {
            "from": "    void run_load(std::vector<std:",
            "input": "    void run_load(std::vector<std:",
            "to": "    void run_load(std::vector<std::"
        },
        {
            "from": "    void run_load(std::vector<std::",
            "input": "    void run_load(std::vector<std::",
            "to": "    void run_load(std::vector<std::s"
        },
        {
            "from": "    void run_load(std::vector<std::s",
            "input": "    void run_load(std::vector<std::s",
            "to": "    void run_load(std::vector<std::st"
        },
        {
            "from": "    void run_load(std::vector<std::st",
            "input": "    void run_load(std::vector<std::st",
            "to": "    void run_load(std::vector<std::str"
        },
        {
            "from": "    void run_load(std::vector<std::str",
            "input": "    void run_load(std::vector<std::str",
            "to": "    void run_load(std::vector<std::stri"
        },
        {
            "from": "    void run_load(std::vector<std::stri",
            "input": "    void run_load(std::vector<std::stri",
            "to": "    void run_load(std::vector<std::strin"
        },
        {
            "from": "    void run_load(std::vector<std::strin",
            "input": "    void run_load(std::vector<std::strin",
            "to": "    void run_load(std::vector<std::string"
        },
        {
            "from": "    void run_load(std::vector<std::string",
            "input": "    void run_load(std::vector<std::string",
            "to": "    void run_load(std::vector<std::string>"
        },
        {
            "from": "    void run_load(std::vector<std::string>",
            "input": "    void run_load(std::vector<std::string>",
            "to": "    void run_load(std::vector<std::string> "
        },
        {
            "from": "    void run_load(std::vector<std::string> ",
            "input": "    void run_load(std::vector<std::string> ",
            "to": "    void run_load(std::vector<std::string> &"
        },
        {
            "from": "    void run_load(std::vector<std::string> &",
            "input": "    void run_load(std::vector<std::string> &",
            "to": "    void run_load(std::vector<std::string> &a"
        },
        {
            "from": "    void run_load(std::vector<std::string> &a",
            "input": "    void run_load(std::vector<std::string> &a",
            "to": "    void run_load(std::vector<std::string> &ar"
        },
        {
            "from": "    void run_load(std::vector<std::string> &ar",
            "input": "    void run_load(std::vector<std::string> &ar",
            "to": "    void run_load(std::vector<std::string> &arg"
        },
        {
            "from": "    void run_load(std::vector<std::string> &arg",
            "input": "    void run_load(std::vector<std::string> &arg",
            "to": "    void run_load(std::vector<std::string> &args"
        },
        {
            "from": "    void run_load(std::vector<std::string> &args",
            "input": "    void run_load(std::vector<std::string> &args",
            "to": "    void run_load(std::vector<std::string> &args)"
        },
        {
            "from": "    void run_load(std::vector<std::string> &args)",
            "input": "    void run_load(std::vector<std::string> &args)",
            "to": "    void run_load(std::vector<std::string> &args);"
        },
        {
            "from": "    void run_m",
            "input": "    void run_m",
            "to": "    void run_mi"
        },
        {
            "from": "    void run_mi",
            "input": "    void run_mi",
            "to": "    void run_min"
        },
        {
            "from": "    void run_min",
            "input": "    void run_min",
            "to": "    void run_mini"
        },
        {
            "from": "    void run_mini",
            "input": "    void run_mini",
            "to": "    void run_minim"
        },
        {
            "from": "    void run_minim",
            "input": "    void run_minim",
            "to": "    void run_minimi"
        },
        {
            "from": "    void run_minimi",
            "input": "    void run_minimi",
            "to": "    void run_minimiz"
        },
        {
            "from": "    void run_minimiz",
            "input": "    void run_minimiz",
            "to": "    void run_minimize"
        },
        {
            "from": "    void run_minimize",
            "input": "    void run_minimize",
            "to": "    void run_minimize("
        },
        {
            "from": "    void run_minimize(",
            "input": "    void run_minimize(",
            "to": "    void run_minimize(s"
        },
        {
            "from": "    void run_minimize(s",
            "input": "    void run_minimize(s",
            "to": "    void run_minimize(st"
        },
        {
            "from": "    void run_minimize(st",
            "input": "    void run_minimize(st",
            "to": "    void run_minimize(std"
        },
        {
            "from": "    void run_minimize(std",
            "input": "    void run_minimize(std",
            "to": "    void run_minimize(std:"
        },
        {
            "from": "    void run_minimize(std:",
            "input": "    void run_minimize(std:",
            "to": "    void run_minimize(std::"
        },
        {
            "from": "    void run_minimize(std::",
            "input": "    void run_minimize(std::",
            "to": "    void run_minimize(std::v"
        },
        {
            "from": "    void run_minimize(std::v",
            "input": "    void run_minimize(std::v",
            "to": "    void run_minimize(std::ve"
        },
        {
            "from": "    void run_minimize(std::ve",
            "input": "    void run_minimize(std::ve",
            "to": "    void run_minimize(std::vec"
        },
        {
            "from": "    void run_minimize(std::vec",
            "input": "    void run_minimize(std::vec",
            "to": "    void run_minimize(std::vect"
        },
        {
            "from": "    void run_minimize(std::vect",
            "input": "    void run_minimize(std::vect",
            "to": "    void run_minimize(std::vecto"
        },
        {
            "from": "    void run_minimize(std::vecto",
            "input": "    void run_minimize(std::vecto",
            "to": "    void run_minimize(std::vector"
        },
        {
            "from": "    void run_minimize(std::vector",
            "input": "    void run_minimize(std::vector",
            "to": "    void run_minimize(std::vector<"
        },
        {
            "from": "    void run_minimize(std::vector<",
            "input": "    void run_minimize(std::vector<",
            "to": "    void run_minimize(std::vector<s"
        },
        {
            "from": "    void run_minimize(std::vector<s",
            "input": "    void run_minimize(std::vector<s",
            "to": "    void run_minimize(std::vector<st"
        },
        {
            "from": "    void run_minimize(std::vector<st",
            "input": "    void run_minimize(std::vector<st",
            "to": "    void run_minimize(std::vector<std"
        },
        {
            "from": "    void run_minimize(std::vector<std",
            "input": "    void run_minimize(std::vector<std",
            "to": "    void run_minimize(std::vector<std:"
        },
        {
            "from": "    void run_minimize(std::vector<std:",
            "input": "    void run_minimize(std::vector<std:",
            "to": "    void run_minimize(std::vector<std::"
        },
        {
            "from": "    void run_minimize(std::vector<std::",
            "input": "    void run_minimize(std::vector<std::",
            "to": "    void run_minimize(std::vector<std::s"
        },
        {
            "from": "    void run_minimize(std::vector<std::s",
            "input": "    void run_minimize(std::vector<std::s",
            "to": "    void run_minimize(std::vector<std::st"
        },
        {
            "from": "    void run_minimize(std::vector<std::st",
            "input": "    void run_minimize(std::vector<std::st",
            "to": "    void run_minimize(std::vector<std::str"
        },
        {
            "from": "    void run_minimize(std::vector<std::str",
            "input": "    void run_minimize(std::vector<std::str",
            "to": "    void run_minimize(std::vector<std::stri"
        },
        {
            "from": "    void run_minimize(std::vector<std::stri",
            "input": "    void run_minimize(std::vector<std::stri",
            "to": "    void run_minimize(std::vector<std::strin"
        },
        {
            "from": "    void run_minimize(std::vector<std::strin",
            "input": "    void run_minimize(std::vector<std::strin",
            "to": "    void run_minimize(std::vector<std::string"
        },
        {
            "from": "    void run_minimize(std::vector<std::string",
            "input": "    void run_minimize(std::vector<std::string",
            "to": "    void run_minimize(std::vector<std::string>"
        },
        {
            "from": "    void run_minimize(std::vector<std::string>",
            "input": "    void run_minimize(std::vector<std::string>",
            "to": "    void run_minimize(std::vector<std::string> "
        },
        {
            "from": "    void run_minimize(std::vector<std::string> ",
            "input": "    void run_minimize(std::vector<std::string> ",
            "to": "    void run_minimize(std::vector<std::string> &"
        },
        {
            "from": "    void run_minimize(std::vector<std::string> &",
            "input": "    void run_minimize(std::vector<std::string> &",
            "to": "    void run_minimize(std::vector<std::string> &a"
        },
        {
            "from": "    void run_minimize(std::vector<std::string> &a",
            "input": "    void run_minimize(std::vector<std::string> &a",
            "to": "    void run_minimize(std::vector<std::string> &ar"
        },
        {
            "from": "    void run_minimize(std::vector<std::string> &ar",
            "input": "    void run_minimize(std::vector<std::string> &ar",
            "to": "    void run_minimize(std::vector<std::string> &arg"
        },
        {
            "from": "    void run_minimize(std::vector<std::string> &arg",
            "input": "    void run_minimize(std::vector<std::string> &arg",
            "to": "    void run_minimize(std::vector<std::string> &args"
        },
        {
            "from": "    void run_minimize(std::vector<std::string> &args",
            "input": "    void run_minimize(std::vector<std::string> &args",
            "to": "    void run_minimize(std::vector<std::string> &args)"
        },
        {
            "from": "    void run_minimize(std::vector<std::string> &args)",
            "input": "    void run_minimize(std::vector<std::string> &args)",
            "to": "    void run_minimize(std::vector<std::string> &args);"
        },
        {
            "from": "    void run_r",
            "input": "    void run_r",
            "to": "    void run_re"
        },
        {
            "from": "    void run_re",
            "input": "    void run_re",
            "to": "    void run_rem"
        },
        {
            "from": "    void run_rem",
            "input": "    void run_rem",
            "to": "    void run_remo"
        },
        {
            "from": "    void run_remo",
            "input": "    void run_remo",
            "to": "    void run_remov"
        },
        {
            "from": "    void run_remov",
            "input": "    void run_remov",
            "to": "    void run_remove"
        },
        {
            "from": "    void run_remove",
            "input": "    void run_remove",
            "to": "    void run_remove("
        },
        {
            "from": "    void run_remove(",
            "input": "    void run_remove(",
            "to": "    void run_remove(s"
        },
        {
            "from": "    void run_remove(s",
            "input": "    void run_remove(s",
            "to": "    void run_remove(st"
        },
        {
            "from": "    void run_remove(st",
            "input": "    void run_remove(st",
            "to": "    void run_remove(std"
        },
        {
            "from": "    void run_remove(std",
            "input": "    void run_remove(std",
            "to": "    void run_remove(std:"
        },
        {
            "from": "    void run_remove(std:",
            "input": "    void run_remove(std:",
            "to": "    void run_remove(std::"
        },
        {
            "from": "    void run_remove(std::",
            "input": "    void run_remove(std::",
            "to": "    void run_remove(std::v"
        },
        {
            "from": "    void run_remove(std::v",
            "input": "    void run_remove(std::v",
            "to": "    void run_remove(std::ve"
        },
        {
            "from": "    void run_remove(std::ve",
            "input": "    void run_remove(std::ve",
            "to": "    void run_remove(std::vec"
        },
        {
            "from": "    void run_remove(std::vec",
            "input": "    void run_remove(std::vec",
            "to": "    void run_remove(std::vect"
        },
        {
            "from": "    void run_remove(std::vect",
            "input": "    void run_remove(std::vect",
            "to": "    void run_remove(std::vecto"
        },
        {
            "from": "    void run_remove(std::vecto",
            "input": "    void run_remove(std::vecto",
            "to": "    void run_remove(std::vector"
        },
        {
            "from": "    void run_remove(std::vector",
            "input": "    void run_remove(std::vector",
            "to": "    void run_remove(std::vector<"
        },
        {
            "from": "    void run_remove(std::vector<",
            "input": "    void run_remove(std::vector<",
            "to": "    void run_remove(std::vector<s"
        },
        {
            "from": "    void run_remove(std::vector<s",
            "input": "    void run_remove(std::vector<s",
            "to": "    void run_remove(std::vector<st"
        },
        {
            "from": "    void run_remove(std::vector<st",
            "input": "    void run_remove(std::vector<st",
            "to": "    void run_remove(std::vector<std"
        },
        {
            "from": "    void run_remove(std::vector<std",
            "input": "    void run_remove(std::vector<std",
            "to": "    void run_remove(std::vector<std:"
        },
        {
            "from": "    void run_remove(std::vector<std:",
            "input": "    void run_remove(std::vector<std:",
            "to": "    void run_remove(std::vector<std::"
        },
        {
            "from": "    void run_remove(std::vector<std::",
            "input": "    void run_remove(std::vector<std::",
            "to": "    void run_remove(std::vector<std::s"
        },
        {
            "from": "    void run_remove(std::vector<std::s",
            "input": "    void run_remove(std::vector<std::s",
            "to": "    void run_remove(std::vector<std::st"
        },
        {
            "from": "    void run_remove(std::vector<std::st",
            "input": "    void run_remove(std::vector<std::st",
            "to": "    void run_remove(std::vector<std::str"
        },
        {
            "from": "    void run_remove(std::vector<std::str",
            "input": "    void run_remove(std::vector<std::str",
            "to": "    void run_remove(std::vector<std::stri"
        },
        {
            "from": "    void run_remove(std::vector<std::stri",
            "input": "    void run_remove(std::vector<std::stri",
            "to": "    void run_remove(std::vector<std::strin"
        },
        {
            "from": "    void run_remove(std::vector<std::strin",
            "input": "    void run_remove(std::vector<std::strin",
            "to": "    void run_remove(std::vector<std::string"
        },
        {
            "from": "    void run_remove(std::vector<std::string",
            "input": "    void run_remove(std::vector<std::string",
            "to": "    void run_remove(std::vector<std::string>"
        },
        {
            "from": "    void run_remove(std::vector<std::string>",
            "input": "    void run_remove(std::vector<std::string>",
            "to": "    void run_remove(std::vector<std::string> "
        },
        {
            "from": "    void run_remove(std::vector<std::string> ",
            "input": "    void run_remove(std::vector<std::string> ",
            "to": "    void run_remove(std::vector<std::string> &"
        },
        {
            "from": "    void run_remove(std::vector<std::string> &",
            "input": "    void run_remove(std::vector<std::string> &",
            "to": "    void run_remove(std::vector<std::string> &a"
        },
        {
            "from": "    void run_remove(std::vector<std::string> &a",
            "input": "    void run_remove(std::vector<std::string> &a",
            "to": "    void run_remove(std::vector<std::string> &ar"
        },
        {
            "from": "    void run_remove(std::vector<std::string> &ar",
            "input": "    void run_remove(std::vector<std::string> &ar",
            "to": "    void run_remove(std::vector<std::string> &arg"
        },
        {
            "from": "    void run_remove(std::vector<std::string> &arg",
            "input": "    void run_remove(std::vector<std::string> &arg",
            "to": "    void run_remove(std::vector<std::string> &args"
        },
        {
            "from": "    void run_remove(std::vector<std::string> &args",
            "input": "    void run_remove(std::vector<std::string> &args",
            "to": "    void run_remove(std::vector<std::string> &args)"
        },
        {
            "from": "    void run_remove(std::vector<std::string> &args)",
            "input": "    void run_remove(std::vector<std::string> &args)",
            "to": "    void run_remove(std::vector<std::string> &args);"
        },
        {
            "from": "    void run_s",
            "input": "    void run_s",
            "to": "    void run_su"
        },
        {
            "from": "    void run_sa",
            "input": "    void run_sa",
            "to": "    void run_sav"
        },
        {
            "from": "    void run_sav",
            "input": "    void run_sav",
            "to": "    void run_save"
        },
        {
            "from": "    void run_save",
            "input": "    void run_save",
            "to": "    void run_save("
        },
        {
            "from": "    void run_save(",
            "input": "    void run_save(",
            "to": "    void run_save(s"
        },
        {
            "from": "    void run_save(s",
            "input": "    void run_save(s",
            "to": "    void run_save(st"
        },
        {
            "from": "    void run_save(st",
            "input": "    void run_save(st",
            "to": "    void run_save(std"
        },
        {
            "from": "    void run_save(std",
            "input": "    void run_save(std",
            "to": "    void run_save(std:"
        },
        {
            "from": "    void run_save(std:",
            "input": "    void run_save(std:",
            "to": "    void run_save(std::"
        },
        {
            "from": "    void run_save(std::",
            "input": "    void run_save(std::",
            "to": "    void run_save(std::v"
        },
        {
            "from": "    void run_save(std::v",
            "input": "    void run_save(std::v",
            "to": "    void run_save(std::ve"
        },
        {
            "from": "    void run_save(std::ve",
            "input": "    void run_save(std::ve",
            "to": "    void run_save(std::vec"
        },
        {
            "from": "    void run_save(std::vec",
            "input": "    void run_save(std::vec",
            "to": "    void run_save(std::vect"
        },
        {
            "from": "    void run_save(std::vect",
            "input": "    void run_save(std::vect",
            "to": "    void run_save(std::vecto"
        },
        {
            "from": "    void run_save(std::vecto",
            "input": "    void run_save(std::vecto",
            "to": "    void run_save(std::vector"
        },
        {
            "from": "    void run_save(std::vector",
            "input": "    void run_save(std::vector",
            "to": "    void run_save(std::vector<"
        },
        {
            "from": "    void run_save(std::vector<",
            "input": "    void run_save(std::vector<",
            "to": "    void run_save(std::vector<s"
        },
        {
            "from": "    void run_save(std::vector<s",
            "input": "    void run_save(std::vector<s",
            "to": "    void run_save(std::vector<st"
        },
        {
            "from": "    void run_save(std::vector<st",
            "input": "    void run_save(std::vector<st",
            "to": "    void run_save(std::vector<std"
        },
        {
            "from": "    void run_save(std::vector<std",
            "input": "    void run_save(std::vector<std",
            "to": "    void run_save(std::vector<std:"
        },
        {
            "from": "    void run_save(std::vector<std:",
            "input": "    void run_save(std::vector<std:",
            "to": "    void run_save(std::vector<std::"
        },
        {
            "from": "    void run_save(std::vector<std::",
            "input": "    void run_save(std::vector<std::",
            "to": "    void run_save(std::vector<std::s"
        },
        {
            "from": "    void run_save(std::vector<std::s",
            "input": "    void run_save(std::vector<std::s",
            "to": "    void run_save(std::vector<std::st"
        },
        {
            "from": "    void run_save(std::vector<std::st",
            "input": "    void run_save(std::vector<std::st",
            "to": "    void run_save(std::vector<std::str"
        },
        {
            "from": "    void run_save(std::vector<std::str",
            "input": "    void run_save(std::vector<std::str",
            "to": "    void run_save(std::vector<std::stri"
        },
        {
            "from": "    void run_save(std::vector<std::stri",
            "input": "    void run_save(std::vector<std::stri",
            "to": "    void run_save(std::vector<std::strin"
        },
        {
            "from": "    void run_save(std::vector<std::strin",
            "input": "    void run_save(std::vector<std::strin",
            "to": "    void run_save(std::vector<std::string"
        },
        {
            "from": "    void run_save(std::vector<std::string",
            "input": "    void run_save(std::vector<std::string",
            "to": "    void run_save(std::vector<std::string>"
        },
        {
            "from": "    void run_save(std::vector<std::string>",
            "input": "    void run_save(std::vector<std::string>",
            "to": "    void run_save(std::vector<std::string> "
        },
        {
            "from": "    void run_save(std::vector<std::string> ",
            "input": "    void run_save(std::vector<std::string> ",
            "to": "    void run_save(std::vector<std::string> &"
        },
        {
            "from": "    void run_save(std::vector<std::string> &",
            "input": "    void run_save(std::vector<std::string> &",
            "to": "    void run_save(std::vector<std::string> &a"
        },
        {
            "from": "    void run_save(std::vector<std::string> &a",
            "input": "    void run_save(std::vector<std::string> &a",
            "to": "    void run_save(std::vector<std::string> &ar"
        },
        {
            "from": "    void run_save(std::vector<std::string> &ar",
            "input": "    void run_save(std::vector<std::string> &ar",
            "to": "    void run_save(std::vector<std::string> &arg"
        },
        {
            "from": "    void run_save(std::vector<std::string> &arg",
            "input": "    void run_save(std::vector<std::string> &arg",
            "to": "    void run_save(std::vector<std::string> &args"
        },
        {
            "from": "    void run_save(std::vector<std::string> &args",
            "input": "    void run_save(std::vector<std::string> &args",
            "to": "    void run_save(std::vector<std::string> &args)"
        },
        {
            "from": "    void run_save(std::vector<std::string> &args)",
            "input": "    void run_save(std::vector<std::string> &args)",
            "to": "    void run_save(std::vector<std::string> &args);"
        },
        {
            "from": "    void run_su",
            "input": "    void run_su",
            "to": "    void run_sug"
        },
        {
            "from": "    void run_sug",
            "input": "    void run_sug",
            "to": "    void run_sugg"
        },
        {
            "from": "    void run_sugg",
            "input": "    void run_sugg",
            "to": "    void run_sugge"
        },
        {
            "from": "    void run_sugge",
            "input": "    void run_sugge",
            "to": "    void run_sugges"
        },
        {
            "from": "    void run_sugges",
            "input": "    void run_sugges",
            "to": "    void run_suggest"
        },
        {
            "from": "    void run_suggest",
            "input": "    void run_suggest",
            "to": "    void run_suggest("
        },
        {
            "from": "    void run_suggest(",
            "input": "    void run_suggest(",
            "to": "    void run_suggest(s"
        },
        {
            "from": "    void run_suggest(s",
            "input": "    void run_suggest(s",
            "to": "    void run_suggest(st"
        },
        {
            "from": "    void run_suggest(st",
            "input": "    void run_suggest(st",
            "to": "    void run_suggest(std"
        },
        {
            "from": "    void run_suggest(std",
            "input": "    void run_suggest(std",
            "to": "    void run_suggest(std:"
        },
        {
            "from": "    void run_suggest(std:",
            "input": "    void run_suggest(std:",
            "to": "    void run_suggest(std::"
        },
        {
            "from": "    void run_suggest(std::",
            "input": "    void run_suggest(std::",
            "to": "    void run_suggest(std::v"
        },
        {
            "from": "    void run_suggest(std::v",
            "input": "    void run_suggest(std::v",
            "to": "    void run_suggest(std::ve"
        },
        {
            "from": "    void run_suggest(std::ve",
            "input": "    void run_suggest(std::ve",
            "to": "    void run_suggest(std::vec"
        },
        {
            "from": "    void run_suggest(std::vec",
            "input": "    void run_suggest(std::vec",
            "to": "    void run_suggest(std::vect"
        },
        {
            "from": "    void run_suggest(std::vect",
            "input": "    void run_suggest(std::vect",
            "to": "    void run_suggest(std::vecto"
        },
        {
            "from": "    void run_suggest(std::vecto",
            "input": "    void run_suggest(std::vecto",
            "to": "    void run_suggest(std::vector"
        },
        {
            "from": "    void run_suggest(std::vector",
            "input": "    void run_suggest(std::vector",
            "to": "    void run_suggest(std::vector<"
        },
        {
            "from": "    void run_suggest(std::vector<",
            "input": "    void run_suggest(std::vector<",
            "to": "    void run_suggest(std::vector<s"
        },
        {
            "from": "    void run_suggest(std::vector<s",
            "input": "    void run_suggest(std::vector<s",
            "to": "    void run_suggest(std::vector<st"
        },
        {
            "from": "    void run_suggest(std::vector<st",
            "input": "    void run_suggest(std::vector<st",
            "to": "    void run_suggest(std::vector<std"
        },
        {
            "from": "    void run_suggest(std::vector<std",
            "input": "    void run_suggest(std::vector<std",
            "to": "    void run_suggest(std::vector<std:"
        },
        {
            "from": "    void run_suggest(std::vector<std:",
            "input": "    void run_suggest(std::vector<std:",
            "to": "    void run_suggest(std::vector<std::"
        },
        {
            "from": "    void run_suggest(std::vector<std::",
            "input": "    void run_suggest(std::vector<std::",
            "to": "    void run_suggest(std::vector<std::s"
        },
        {
            "from": "    void run_suggest(std::vector<std::s",
            "input": "    void run_suggest(std::vector<std::s",
            "to": "    void run_suggest(std::vector<std::st"
        },
        {
            "from": "    void run_suggest(std::vector<std::st",
            "input": "    void run_suggest(std::vector<std::st",
            "to": "    void run_suggest(std::vector<std::str"
        },
        {
            "from": "    void run_suggest(std::vector<std::str",
            "input": "    void run_suggest(std::vector<std::str",
            "to": "    void run_suggest(std::vector<std::stri"
        },
        {
            "from": "    void run_suggest(std::vector<std::stri",
            "input": "    void run_suggest(std::vector<std::stri",
            "to": "    void run_suggest(std::vector<std::strin"
        },
        {
            "from": "    void run_suggest(std::vector<std::strin",
            "input": "    void run_suggest(std::vector<std::strin",
            "to": "    void run_suggest(std::vector<std::string"
        },
        {
            "from": "    void run_suggest(std::vector<std::string",
            "input": "    void run_suggest(std::vector<std::string",
            "to": "    void run_suggest(std::vector<std::string>"
        },
        {
            "from": "    void run_suggest(std::vector<std::string>",
            "input": "    void run_suggest(std::vector<std::string>",
            "to": "    void run_suggest(std::vector<std::string> "
        },
        {
            "from": "    void run_suggest(std::vector<std::string> ",
            "input": "    void run_suggest(std::vector<std::string> ",
            "to": "    void run_suggest(std::vector<std::string> &"
        },
        {
            "from": "    void run_suggest(std::vector<std::string> &",
            "input": "    void run_suggest(std::vector<std::string> &",
            "to": "    void run_suggest(std::vector<std::string> &a"
        },
        {
            "from": "    void run_suggest(std::vector<std::string> &a",
            "input": "    void run_suggest(std::vector<std::string> &a",
            "to": "    void run_suggest(std::vector<std::string> &ar"
        },
        {
            "from": "    void run_suggest(std::vector<std::string> &ar",
            "input": "    void run_suggest(std::vector<std::string> &ar",
            "to": "    void run_suggest(std::vector<std::string> &arg"
        },
        {
            "from": "    void run_suggest(std::vector<std::string> &arg",
            "input": "    void run_suggest(std::vector<std::string> &arg",
            "to": "    void run_suggest(std::vector<std::string> &args"
        },
        {
            "from": "    void run_suggest(std::vector<std::string> &args",
            "input": "    void run_suggest(std::vector<std::string> &args",
            "to": "    void run_suggest(std::vector<std::string> &args)"
        },
        {
            "from": "    void run_suggest(std::vector<std::string> &args)",
            "input": "    void run_suggest(std::vector<std::string> &args)",
            "to": "    void run_suggest(std::vector<std::string> &args);"
        },
        {
            "from": "    void run_w",
            "input": "    void run_w",
            "to": "    void run_wo"
        },
        {
            "from": "    void run_wo",
            "input": "    void run_wo",
            "to": "    void run_wor"
        },
        {
            "from": "    void run_wor",
            "input": "    void run_wor",
            "to": "    void run_word"
        },
        {
            "from": "    void run_word",
            "input": "    void run_word",
            "to": "    void run_wordl"
        },
        {
            "from": "    void run_wordl",
            "input": "    void run_wordl",
            "to": "    void run_wordle"
        },
        {
            "from": "    void run_wordle",
            "input": "    void run_wordle",
            "to": "    void run_wordle("
        },
        {
            "from": "    void run_wordle(",
            "input": "    void run_wordle(",
            "to": "    void run_wordle(s"
        },
        {
            "from": "    void run_wordle(s",
            "input": "    void run_wordle(s",
            "to": "    void run_wordle(st"
        },
        {
            "from": "    void run_wordle(st",
            "input": "    void run_wordle(st",
            "to": "    void run_wordle(std"
        },
        {
            "from": "    void run_wordle(std",
            "input": "    void run_wordle(std",
            "to": "    void run_wordle(std:"
        },
        {
            "from": "    void run_wordle(std:",
            "input": "    void run_wordle(std:",
            "to": "    void run_wordle(std::"
        },
        {
            "from": "    void run_wordle(std::",
            "input": "    void run_wordle(std::",
            "to": "    void run_wordle(std::v"
        },
        {
            "from": "    void run_wordle(std::v",
            "input": "    void run_wordle(std::v",
            "to": "    void run_wordle(std::ve"
        },
        {
            "from": "    void run_wordle(std::ve",
            "input": "    void run_wordle(std::ve",
            "to": "    void run_wordle(std::vec"
        },
        {
            "from": "    void run_wordle(std::vec",
            "input": "    void run_wordle(std::vec",
            "to": "    void run_wordle(std::vect"
        },
        {
            "from": "    void run_wordle(std::vect",
            "input": "    void run_wordle(std::vect",
            "to": "    void run_wordle(std::vecto"
        },
        {
            "from": "    void run_wordle(std::vecto",
            "input": "    void run_wordle(std::vecto",
            "to": "    void run_wordle(std::vector"
        },
        {
            "from": "    void run_wordle(std::vector",
            "input": "    void run_wordle(std::vector",
            "to": "    void run_wordle(std::vector<"
        },
        {
            "from": "    void run_wordle(std::vector<",
            "input": "    void run_wordle(std::vector<",
            "to": "    void run_wordle(std::vector<s"
        },
        {
            "from": "    void run_wordle(std::vector<s",
            "input": "    void run_wordle(std::vector<s",
            "to": "    void run_wordle(std::vector<st"
        },
        {
            "from": "    void run_wordle(std::vector<st",
            "input": "    void run_wordle(std::vector<st",
            "to": "    void run_wordle(std::vector<std"
        },
        {
            "from": "    void run_wordle(std::vector<std",
            "input": "    void run_wordle(std::vector<std",
            "to": "    void run_wordle(std::vector<std:"
        },
        {
            "from": "    void run_wordle(std::vector<std:",
            "input": "    void run_wordle(std::vector<std:",
            "to": "    void run_wordle(std::vector<std::"
        },
        {
            "from": "    void run_wordle(std::vector<std::",
            "input": "    void run_wordle(std::vector<std::",
            "to": "    void run_wordle(std::vector<std::s"
        },
        {
            "from": "    void run_wordle(std::vector<std::s",
            "input": "    void run_wordle(std::vector<std::s",
            "to": "    void run_wordle(std::vector<std::st"
        },
        {
            "from": "    void run_wordle(std::vector<std::st",
            "input": "    void run_wordle(std::vector<std::st",
            "to": "    void run_wordle(std::vector<std::str"
        },
        {
            "from": "    void run_wordle(std::vector<std::str",
            "input": "    void run_wordle(std::vector<std::str",
            "to": "    void run_wordle(std::vector<std::stri"
        },
        {
            "from": "    void run_wordle(std::vector<std::stri",
            "input": "    void run_wordle(std::vector<std::stri",
            "to": "    void run_wordle(std::vector<std::strin"
        },
        {
            "from": "    void run_wordle(std::vector<std::strin",
            "input": "    void run_wordle(std::vector<std::strin",
            "to": "    void run_wordle(std::vector<std::string"
        },
        {
            "from": "    void run_wordle(std::vector<std::string",
            "input": "    void run_wordle(std::vector<std::string",
            "to": "    void run_wordle(std::vector<std::string>"
        },
        {
            "from": "    void run_wordle(std::vector<std::string>",
            "input": "    void run_wordle(std::vector<std::string>",
            "to": "    void run_wordle(std::vector<std::string> "
        },
        {
            "from": "    void run_wordle(std::vector<std::string> ",
            "input": "    void run_wordle(std::vector<std::string> ",
            "to": "    void run_wordle(std::vector<std::string> &"
        },
        {
            "from": "    void run_wordle(std::vector<std::string> &",
            "input": "    void run_wordle(std::vector<std::string> &",
            "to": "    void run_wordle(std::vector<std::string> &a"
        },
        {
            "from": "    void run_wordle(std::vector<std::string> &a",
            "input": "    void run_wordle(std::vector<std::string> &a",
            "to": "    void run_wordle(std::vector<std::string> &ar"
        },
        {
            "from": "    void run_wordle(std::vector<std::string> &ar",
            "input": "    void run_wordle(std::vector<std::string> &ar",
            "to": "    void run_wordle(std::vector<std::string> &arg"
        },
        {
            "from": "    void run_wordle(std::vector<std::string> &arg",
            "input": "    void run_wordle(std::vector<std::string> &arg",
            "to": "    void run_wordle(std::vector<std::string> &args"
        },
        {
            "from": "    void run_wordle(std::vector<std::string> &args",
            "input": "    void run_wordle(std::vector<std::string> &args",
            "to": "    void run_wordle(std::vector<std::string> &args)"
        },
        {
            "from": "    void run_wordle(std::vector<std::string> &args)",
            "input": "    void run_wordle(std::vector<std::string> &args)",
            "to": "    void run_wordle(std::vector<std::string> &args);"
        },
        {
            "from": "    ~",
            "input": "    ~",
            "to": "    ~S"
        },
        {
            "from": "    ~S",
            "input": "    ~S",
            "to": "    ~Sh"
        },
        {
            "from": "    ~Sh",
            "input": "    ~Sh",
            "to": "    ~She"
        },
        {
            "from": "    ~She",
            "input": "    ~She",
            "to": "    ~Shel"
        },
        {
            "from": "    ~Shel",
            "input": "    ~Shel",
            "to": "    ~Shell"
        },
        {
            "from": "    ~Shell",
            "input": "    ~Shell",
            "to": "    ~Shell("
        },
        {
            "from": "    ~Shell(",
            "input": "    ~Shell(",
            "to": "    ~Shell()"
        },
        {
            "from": "    ~Shell()",
            "input": "    ~Shell()",
            "to": "    ~Shell() "
        },
        {
            "from": "    ~Shell() ",
            "input": "    ~Shell() ",
            "to": "    ~Shell() ="
        },
        {
            "from": "    ~Shell() =",
            "input": "    ~Shell() =",
            "to": "    ~Shell() = "
        },
        {
            "from": "    ~Shell() = ",
            "input": "    ~Shell() = ",
            "to": "    ~Shell() = d"
        },
        {
            "from": "    ~Shell() = d",
            "input": "    ~Shell() = d",
            "to": "    ~Shell() = de"
        },
        {
            "from": "    ~Shell() = de",
            "input": "    ~Shell() = de",
            "to": "    ~Shell() = def"
        },
        {
            "from": "    ~Shell() = def",
            "input": "    ~Shell() = def",
            "to": "    ~Shell() = defa"
        },
        {
            "from": "    ~Shell() = defa",
            "input": "    ~Shell() = defa",
            "to": "    ~Shell() = defau"
        },
        {
            "from": "    ~Shell() = defau",
            "input": "    ~Shell() = defau",
            "to": "    ~Shell() = defaul"
        },
        {
            "from": "    ~Shell() = defaul",
            "input": "    ~Shell() = defaul",
            "to": "    ~Shell() = default"
        },
        {
            "from": "    ~Shell() = default",
            "input": "    ~Shell() = default",
            "to": "    ~Shell() = default;"
        },
        {
            "from": "#",
            "input": "#",
            "to": "#i"
        },
        {
            "from": "#d",
            "input": "#d",
            "to": "#de"
        },
        {
            "from": "#de",
            "input": "#de",
            "to": "#def"
        },
        {
            "from": "#def",
            "input": "#def",
            "to": "#defi"
        },
        {
            "from": "#defi",
            "input": "#defi",
            "to": "#defin"
        },
        {
            "from": "#defin",
            "input": "#defin",
            "to": "#define"
        },
        {
            "from": "#define",
            "input": "#define",
            "to": "#define "
        },
        {
            "from": "#define ",
            "input": "#define ",
            "to": "#define D"
        },
        {
            "from": "#define D",
            "input": "#define D",
            "to": "#define DI"
        },
        {
            "from": "#define DI",
            "input": "#define DI",
            "to": "#define DIC"
        },
        {
            "from": "#define DIC",
            "input": "#define DIC",
            "to": "#define DICT"
        },
        {
            "from": "#define DICT",
            "input": "#define DICT",
            "to": "#define DICTI"
        },
        {
            "from": "#define DICTI",
            "input": "#define DICTI",
            "to": "#define DICTIO"
        },
        {
            "from": "#define DICTIO",
            "input": "#define DICTIO",
            "to": "#define DICTION"
        },
        {
            "from": "#define DICTION",
            "input": "#define DICTION",
            "to": "#define DICTIONA"
        },
        {
            "from": "#define DICTIONA",
            "input": "#define DICTIONA",
            "to": "#define DICTIONAR"
        },
        {
            "from": "#define DICTIONAR",
            "input": "#define DICTIONAR",
            "to": "#define DICTIONARY"
        },
        {
            "from": "#define DICTIONARY",
            "input": "#define DICTIONARY",
            "to": "#define DICTIONARY_"
        },
        {
            "from": "#define DICTIONARY_",
            "input": "#define DICTIONARY_",
            "to": "#define DICTIONARY_S"
        },
        {
            "from": "#define DICTIONARY_S",
            "input": "#define DICTIONARY_S",
            "to": "#define DICTIONARY_SH"
        },
        {
            "from": "#define DICTIONARY_SH",
            "input": "#define DICTIONARY_SH",
            "to": "#define DICTIONARY_SHE"
        },
        {
            "from": "#define DICTIONARY_SHE",
            "input": "#define DICTIONARY_SHE",
            "to": "#define DICTIONARY_SHEL"
        },
        {
            "from": "#define DICTIONARY_SHEL",
            "input": "#define DICTIONARY_SHEL",
            "to": "#define DICTIONARY_SHELL"
        },
        {
            "from": "#define DICTIONARY_SHELL",
            "input": "#define DICTIONARY_SHELL",
            "to": "#define DICTIONARY_SHELL_"
        },
        {
            "from": "#define DICTIONARY_SHELL_",
            "input": "#define DICTIONARY_SHELL_",
            "to": "#define DICTIONARY_SHELL_H"
        },
        {
            "from": "#e",
            "input": "#e",
            "to": "#en"
        },
        {
            "from": "#en",
            "input": "#en",
            "to": "#end"
        },
        {
            "from": "#end",
            "input": "#end",
            "to": "#endi"
        },
        {
            "from": "#endi",
            "input": "#endi",
            "to": "#endif"
        },
        {
            "from": "#i",
            "input": "#i",
            "to": "#if"
        },
        {
            "from": "#if",
            "input": "#if",
            "to": "#ifn"
        },
        {
            "from": "#ifn",
            "input": "#ifn",
            "to": "#ifnd"
        },
        {
            "from": "#ifnd",
            "input": "#ifnd",
            "to": "#ifnde"
        },
        {
            "from": "#ifnde",
            "input": "#ifnde",
            "to": "#ifndef"
        },
        {
            "from": "#ifndef",
            "input": "#ifndef",
            "to": "#ifndef "
        },
        {
            "from": "#ifndef ",
            "input": "#ifndef ",
            "to": "#ifndef D"
        },
        {
            "from": "#ifndef D",
            "input": "#ifndef D",
            "to": "#ifndef DI"
        },
        {
            "from": "#ifndef DI",
            "input": "#ifndef DI",
            "to": "#ifndef DIC"
        },
        {
            "from": "#ifndef DIC",
            "input": "#ifndef DIC",
            "to": "#ifndef DICT"
        },
        {
            "from": "#ifndef DICT",
            "input": "#ifndef DICT",
            "to": "#ifndef DICTI"
        },
        {
            "from": "#ifndef DICTI",
            "input": "#ifndef DICTI",
            "to": "#ifndef DICTIO"
        },
        {
            "from": "#ifndef DICTIO",
            "input": "#ifndef DICTIO",
            "to": "#ifndef DICTION"
        },
        {
            "from": "#ifndef DICTION",
            "input": "#ifndef DICTION",
            "to": "#ifndef DICTIONA"
        },
        {
            "from": "#ifndef DICTIONA",
            "input": "#ifndef DICTIONA",
            "to": "#ifndef DICTIONAR"
        },
        {
            "from": "#ifndef DICTIONAR",
            "input": "#ifndef DICTIONAR",
            "to": "#ifndef DICTIONARY"
        },
        {
            "from": "#ifndef DICTIONARY",
            "input": "#ifndef DICTIONARY",
            "to": "#ifndef DICTIONARY_"
        },
        {
            "from": "#ifndef DICTIONARY_",
            "input": "#ifndef DICTIONARY_",
            "to": "#ifndef DICTIONARY_S"
        },
        {
            "from": "#ifndef DICTIONARY_S",
            "input": "#ifndef DICTIONARY_S",
            "to": "#ifndef DICTIONARY_SH"
        },
        {
            "from": "#ifndef DICTIONARY_SH",
            "input": "#ifndef DICTIONARY_SH",
            "to": "#ifndef DICTIONARY_SHE"
        },
        {
            "from": "#ifndef DICTIONARY_SHE",
            "input": "#ifndef DICTIONARY_SHE",
            "to": "#ifndef DICTIONARY_SHEL"
        },
        {
            "from": "#ifndef DICTIONARY_SHEL",
            "input": "#ifndef DICTIONARY_SHEL",
            "to": "#ifndef DICTIONARY_SHELL"
        },
        {
            "from": "#ifndef DICTIONARY_SHELL",
            "input": "#ifndef DICTIONARY_SHELL",
            "to": "#ifndef DICTIONARY_SHELL_"
        },
        {
            "from": "#ifndef DICTIONARY_SHELL_",
            "input": "#ifndef DICTIONARY_SHELL_",
            "to": "#ifndef DICTIONARY_SHELL_H"
        },
        {
            "from": "#in",
            "input": "#in",
            "to": "#inc"
        },
        {
            "from": "#inc",
            "input": "#inc",
            "to": "#incl"
        },
        {
            "from": "#incl",
            "input": "#incl",
            "to": "#inclu"
        },
        {
            "from": "#inclu",
            "input": "#inclu",
            "to": "#includ"
        },
        {
            "from": "#includ",
            "input": "#includ",
            "to": "#include"
        },
        {
            "from": "#include",
            "input": "#include",
            "to": "#include "
        },
        {
            "from": "#include ",
            "input": "#include ",
            "to": "#include \""
        },
        {
            "from": "#include \"",
            "input": "#include \"",
            "to": "#include \"W"
        },
        {
            "from": "#include \"W",
            "input": "#include \"W",
            "to": "#include \"Wo"
        },
        {
            "from": "#include \"Wo",
            "input": "#include \"Wo",
            "to": "#include \"Woo"
        },
        {
            "from": "#include \"Woo",
            "input": "#include \"Woo",
            "to": "#include \"Woor"
        },
        {
            "from": "#include \"Woor",
            "input": "#include \"Woor",
            "to": "#include \"Woord"
        },
        {
            "from": "#include \"Woord",
            "input": "#include \"Woord",
            "to": "#include \"Woorde"
        },
        {
            "from": "#include \"Woorde",
            "input": "#include \"Woorde",
            "to": "#include \"Woorden"
        },
        {
            "from": "#include \"Woorden",
            "input": "#include \"Woorden",
            "to": "#include \"Woordenb"
        },
        {
            "from": "#include \"Woordenb",
            "input": "#include \"Woordenb",
            "to": "#include \"Woordenbo"
        },
        {
            "from": "#include \"Woordenbo",
            "input": "#include \"Woordenbo",
            "to": "#include \"Woordenboe"
        },
        {
            "from": "#include \"Woordenboe",
            "input": "#include \"Woordenboe",
            "to": "#include \"Woordenboek"
        },
        {
            "from": "#include \"Woordenboek",
            "input": "#include \"Woordenboek",
            "to": "#include \"Woordenboek."
        },
        {
            "from": "#include \"Woordenboek.",
            "input": "#include \"Woordenboek.",
            "to": "#include \"Woordenboek.h"
        },
        {
            "from": "#include \"Woordenboek.h",
            "input": "#include \"Woordenboek.h",
            "to": "#include \"Woordenboek.h\""
        },
        {
            "from": "#include <",
            "input": "#include <",
            "to": "#include <i"
        },
        {
            "from": "#include <e",
            "input": "#include <e",
            "to": "#include <ex"
        },
        {
            "from": "#include <ex",
            "input": "#include <ex",
            "to": "#include <exc"
        },
        {
            "from": "#include <exc",
            "input": "#include <exc",
            "to": "#include <exce"
        },
        {
            "from": "#include <exce",
            "input": "#include <exce",
            "to": "#include <excep"
        },
        {
            "from": "#include <excep",
            "input": "#include <excep",
            "to": "#include <except"
        },
        {
            "from": "#include <except",
            "input": "#include <except",
            "to": "#include <excepti"
        },
        {
            "from": "#include <excepti",
            "input": "#include <excepti",
            "to": "#include <exceptio"
        },
        {
            "from": "#include <exceptio",
            "input": "#include <exceptio",
            "to": "#include <exception"
        },
        {
            "from": "#include <exception",
            "input": "#include <exception",
            "to": "#include <exception>"
        },
        {
            "from": "#include <i",
            "input": "#include <i",
            "to": "#include <io"
        },
        {
            "from": "#include <io",
            "input": "#include <io",
            "to": "#include <ios"
        },
        {
            "from": "#include <ios",
            "input": "#include <ios",
            "to": "#include <iost"
        },
        {
            "from": "#include <iost",
            "input": "#include <iost",
            "to": "#include <iostr"
        },
        {
            "from": "#include <iostr",
            "input": "#include <iostr",
            "to": "#include <iostre"
        },
        {
            "from": "#include <iostre",
            "input": "#include <iostre",
            "to": "#include <iostrea"
        },
        {
            "from": "#include <iostrea",
            "input": "#include <iostrea",
            "to": "#include <iostream"
        },
        {
            "from": "#include <iostream",
            "input": "#include <iostream",
            "to": "#include <iostream>"
        },
        {
            "from": "#include <s",
            "input": "#include <s",
            "to": "#include <st"
        },
        {
            "from": "#include <st",
            "input": "#include <st",
            "to": "#include <str"
        },
        {
            "from": "#include <str",
            "input": "#include <str",
            "to": "#include <stri"
        },
        {
            "from": "#include <stri",
            "input": "#include <stri",
            "to": "#include <strin"
        },
        {
            "from": "#include <strin",
            "input": "#include <strin",
            "to": "#include <string"
        },
        {
            "from": "#include <string",
            "input": "#include <string",
            "to": "#include <string>"
        },
        {
            "from": "#include <v",
            "input": "#include <v",
            "to": "#include <ve"
        },
        {
            "from": "#include <ve",
            "input": "#include <ve",
            "to": "#include <vec"
        },
        {
            "from": "#include <vec",
            "input": "#include <vec",
            "to": "#include <vect"
        },
        {
            "from": "#include <vect",
            "input": "#include <vect",
            "to": "#include <vecto"
        },
        {
            "from": "#include <vecto",
            "input": "#include <vecto",
            "to": "#include <vector"
        },
        {
            "from": "#include <vector",
            "input": "#include <vector",
            "to": "#include <vector>"
        },
        {
            "from": "Start",
            "input": "",
            "to": "#"
        },
        {
            "from": "b",
            "input": "b",
            "to": "bo"
        },
        {
            "from": "bo",
            "input": "bo",
            "to": "boo"
        },
        {
            "from": "boo",
            "input": "boo",
            "to": "bool"
        },
        {
            "from": "bool",
            "input": "bool",
            "to": "bool "
        },
        {
            "from": "bool ",
            "input": "bool ",
            "to": "bool F"
        },
        {
            "from": "bool F",
            "input": "bool F",
            "to": "bool Fi"
        },
        {
            "from": "bool Fi",
            "input": "bool Fi",
            "to": "bool Fil"
        },
        {
            "from": "bool Fil",
            "input": "bool Fil",
            "to": "bool File"
        },
        {
            "from": "bool File",
            "input": "bool File",
            "to": "bool FileE"
        },
        {
            "from": "bool FileE",
            "input": "bool FileE",
            "to": "bool FileEx"
        },
        {
            "from": "bool FileEx",
            "input": "bool FileEx",
            "to": "bool FileExi"
        },
        {
            "from": "bool FileExi",
            "input": "bool FileExi",
            "to": "bool FileExis"
        },
        {
            "from": "bool FileExis",
            "input": "bool FileExis",
            "to": "bool FileExist"
        },
        {
            "from": "bool FileExist",
            "input": "bool FileExist",
            "to": "bool FileExists"
        },
        {
            "from": "bool FileExists",
            "input": "bool FileExists",
            "to": "bool FileExists("
        },
        {
            "from": "bool FileExists(",
            "input": "bool FileExists(",
            "to": "bool FileExists(c"
        },
        {
            "from": "bool FileExists(c",
            "input": "bool FileExists(c",
            "to": "bool FileExists(co"
        },
        {
            "from": "bool FileExists(co",
            "input": "bool FileExists(co",
            "to": "bool FileExists(con"
        },
        {
            "from": "bool FileExists(con",
            "input": "bool FileExists(con",
            "to": "bool FileExists(cons"
        },
        {
            "from": "bool FileExists(cons",
            "input": "bool FileExists(cons",
            "to": "bool FileExists(const"
        },
        {
            "from": "bool FileExists(const",
            "input": "bool FileExists(const",
            "to": "bool FileExists(const "
        },
        {
            "from": "bool FileExists(const ",
            "input": "bool FileExists(const ",
            "to": "bool FileExists(const s"
        },
        {
            "from": "bool FileExists(const s",
            "input": "bool FileExists(const s",
            "to": "bool FileExists(const st"
        },
        {
            "from": "bool FileExists(const st",
            "input": "bool FileExists(const st",
            "to": "bool FileExists(const std"
        },
        {
            "from": "bool FileExists(const std",
            "input": "bool FileExists(const std",
            "to": "bool FileExists(const std:"
        },
        {
            "from": "bool FileExists(const std:",
            "input": "bool FileExists(const std:",
            "to": "bool FileExists(const std::"
        },
        {
            "from": "bool FileExists(const std::",
            "input": "bool FileExists(const std::",
            "to": "bool FileExists(const std::s"
        },
        {
            "from": "bool FileExists(const std::s",
            "input": "bool FileExists(const std::s",
            "to": "bool FileExists(const std::st"
        },
        {
            "from": "bool FileExists(const std::st",
            "input": "bool FileExists(const std::st",
            "to": "bool FileExists(const std::str"
        },
        {
            "from": "bool FileExists(const std::str",
            "input": "bool FileExists(const std::str",
            "to": "bool FileExists(const std::stri"
        },
        {
            "from": "bool FileExists(const std::stri",
            "input": "bool FileExists(const std::stri",
            "to": "bool FileExists(const std::strin"
        },
        {
            "from": "bool FileExists(const std::strin",
            "input": "bool FileExists(const std::strin",
            "to": "bool FileExists(const std::string"
        },
        {
            "from": "bool FileExists(const std::string",
            "input": "bool FileExists(const std::string",
            "to": "bool FileExists(const std::string "
        },
        {
            "from": "bool FileExists(const std::string ",
            "input": "bool FileExists(const std::string ",
            "to": "bool FileExists(const std::string &"
        },
        {
            "from": "bool FileExists(const std::string &",
            "input": "bool FileExists(const std::string &",
            "to": "bool FileExists(const std::string &f"
        },
        {
            "from": "bool FileExists(const std::string &f",
            "input": "bool FileExists(const std::string &f",
            "to": "bool FileExists(const std::string &fi"
        },
        {
            "from": "bool FileExists(const std::string &fi",
            "input": "bool FileExists(const std::string &fi",
            "to": "bool FileExists(const std::string &fil"
        },
        {
            "from": "bool FileExists(const std::string &fil",
            "input": "bool FileExists(const std::string &fil",
            "to": "bool FileExists(const std::string &file"
        },
        {
            "from": "bool FileExists(const std::string &file",
            "input": "bool FileExists(const std::string &file",
            "to": "bool FileExists(const std::string &filen"
        },
        {
            "from": "bool FileExists(const std::string &filen",
            "input": "bool FileExists(const std::string &filen",
            "to": "bool FileExists(const std::string &filena"
        },
        {
            "from": "bool FileExists(const std::string &filena",
            "input": "bool FileExists(const std::string &filena",
            "to": "bool FileExists(const std::string &filenam"
        },
        {
            "from": "bool FileExists(const std::string &filenam",
            "input": "bool FileExists(const std::string &filenam",
            "to": "bool FileExists(const std::string &filename"
        },
        {
            "from": "bool FileExists(const std::string &filename",
            "input": "bool FileExists(const std::string &filename",
            "to": "bool FileExists(const std::string &filename)"
        },
        {
            "from": "bool FileExists(const std::string &filename)",
            "input": "bool FileExists(const std::string &filename)",
            "to": "bool FileExists(const std::string &filename);"
        },
        {
            "from": "bool c",
            "input": "bool c",
            "to": "bool co"
        },
        {
            "from": "bool co",
            "input": "bool co",
            "to": "bool con"
        },
        {
            "from": "bool con",
            "input": "bool con",
            "to": "bool cont"
        },
        {
            "from": "bool cont",
            "input": "bool cont",
            "to": "bool conta"
        },
        {
            "from": "bool conta",
            "input": "bool conta",
            "to": "bool contai"
        },
        {
            "from": "bool contai",
            "input": "bool contai",
            "to": "bool contain"
        },
        {
            "from": "bool contain",
            "input": "bool contain",
            "to": "bool contains"
        },
        {
            "from": "bool contains",
            "input": "bool contains",
            "to": "bool containsO"
        },
        {
            "from": "bool containsO",
            "input": "bool containsO",
            "to": "bool containsOn"
        },
        {
            "from": "bool containsOn",
            "input": "bool containsOn",
            "to": "bool containsOnl"
        },
        {
            "from": "bool containsOnl",
            "input": "bool containsOnl",
            "to": "bool containsOnly"
        },
        {
            "from": "bool containsOnly",
            "input": "bool containsOnly",
            "to": "bool containsOnlyL"
        },
        {
            "from": "bool containsOnlyL",
            "input": "bool containsOnlyL",
            "to": "bool containsOnlyLe"
        },
        {
            "from": "bool containsOnlyLe",
            "input": "bool containsOnlyLe",
            "to": "bool containsOnlyLet"
        },
        {
            "from": "bool containsOnlyLet",
            "input": "bool containsOnlyLet",
            "to": "bool containsOnlyLett"
        },
        {
            "from": "bool containsOnlyLett",
            "input": "bool containsOnlyLett",
            "to": "bool containsOnlyLette"
        },
        {
            "from": "bool containsOnlyLette",
            "input": "bool containsOnlyLette",
            "to": "bool containsOnlyLetter"
        },
        {
            "from": "bool containsOnlyLetter",
            "input": "bool containsOnlyLetter",
            "to": "bool containsOnlyLetters"
        },
        {
            "from": "bool containsOnlyLetters",
            "input": "bool containsOnlyLetters",
            "to": "bool containsOnlyLetters("
        },
        {
            "from": "bool containsOnlyLetters(",
            "input": "bool containsOnlyLetters(",
            "to": "bool containsOnlyLetters(s"
        },
        {
            "from": "bool containsOnlyLetters(s",
            "input": "bool containsOnlyLetters(s",
            "to": "bool containsOnlyLetters(st"
        },
        {
            "from": "bool containsOnlyLetters(st",
            "input": "bool containsOnlyLetters(st",
            "to": "bool containsOnlyLetters(std"
        },
        {
            "from": "bool containsOnlyLetters(std",
            "input": "bool containsOnlyLetters(std",
            "to": "bool containsOnlyLetters(std:"
        },
        {
            "from": "bool containsOnlyLetters(std:",
            "input": "bool containsOnlyLetters(std:",
            "to": "bool containsOnlyLetters(std::"
        },
        {
            "from": "bool containsOnlyLetters(std::",
            "input": "bool containsOnlyLetters(std::",
            "to": "bool containsOnlyLetters(std::s"
        },
        {
            "from": "bool containsOnlyLetters(std::s",
            "input": "bool containsOnlyLetters(std::s",
            "to": "bool containsOnlyLetters(std::st"
        },
        {
            "from": "bool containsOnlyLetters(std::st",
            "input": "bool containsOnlyLetters(std::st",
            "to": "bool containsOnlyLetters(std::str"
        },
        {
            "from": "bool containsOnlyLetters(std::str",
            "input": "bool containsOnlyLetters(std::str",
            "to": "bool containsOnlyLetters(std::stri"
        },
        {
            "from": "bool containsOnlyLetters(std::stri",
            "input": "bool containsOnlyLetters(std::stri",
            "to": "bool containsOnlyLetters(std::strin"
        },
        {
            "from": "bool containsOnlyLetters(std::strin",
            "input": "bool containsOnlyLetters(std::strin",
            "to": "bool containsOnlyLetters(std::string"
        },
        {
            "from": "bool containsOnlyLetters(std::string",
            "input": "bool containsOnlyLetters(std::string",
            "to": "bool containsOnlyLetters(std::string "
        },
        {
            "from": "bool containsOnlyLetters(std::string ",
            "input": "bool containsOnlyLetters(std::string ",
            "to": "bool containsOnlyLetters(std::string c"
        },
        {
            "from": "bool containsOnlyLetters(std::string c",
            "input": "bool containsOnlyLetters(std::string c",
            "to": "bool containsOnlyLetters(std::string co"
        },
        {
            "from": "bool containsOnlyLetters(std::string co",
            "input": "bool containsOnlyLetters(std::string co",
            "to": "bool containsOnlyLetters(std::string con"
        },
        {
            "from": "bool containsOnlyLetters(std::string con",
            "input": "bool containsOnlyLetters(std::string con",
            "to": "bool containsOnlyLetters(std::string cons"
        },
        {
            "from": "bool containsOnlyLetters(std::string cons",
            "input": "bool containsOnlyLetters(std::string cons",
            "to": "bool containsOnlyLetters(std::string const"
        },
        {
            "from": "bool containsOnlyLetters(std::string const",
            "input": "bool containsOnlyLetters(std::string const",
            "to": "bool containsOnlyLetters(std::string const "
        },
        {
            "from": "bool containsOnlyLetters(std::string const ",
            "input": "bool containsOnlyLetters(std::string const ",
            "to": "bool containsOnlyLetters(std::string const &"
        },
        {
            "from": "bool containsOnlyLetters(std::string const &",
            "input": "bool containsOnlyLetters(std::string const &",
            "to": "bool containsOnlyLetters(std::string const &s"
        },
        {
            "from": "bool containsOnlyLetters(std::string const &s",
            "input": "bool containsOnlyLetters(std::string const &s",
            "to": "bool containsOnlyLetters(std::string const &st"
        },
        {
            "from": "bool containsOnlyLetters(std::string const &st",
            "input": "bool containsOnlyLetters(std::string const &st",
            "to": "bool containsOnlyLetters(std::string const &str"
        },
        {
            "from": "bool containsOnlyLetters(std::string const &str",
            "input": "bool containsOnlyLetters(std::string const &str",
            "to": "bool containsOnlyLetters(std::string const &str)"
        },
        {
            "from": "bool containsOnlyLetters(std::string const &str)",
            "input": "bool containsOnlyLetters(std::string const &str)",
            "to": "bool containsOnlyLetters(std::string const &str);"
        },
        {
            "from": "bool i",
            "input": "bool i",
            "to": "bool is"
        },
        {
            "from": "bool is",
            "input": "bool is",
            "to": "bool isN"
        },
        {
            "from": "bool isN",
            "input": "bool isN",
            "to": "bool isNu"
        },
        {
            "from": "bool isNu",
            "input": "bool isNu",
            "to": "bool isNum"
        },
        {
            "from": "bool isNum",
            "input": "bool isNum",
            "to": "bool isNumb"
        },
        {
            "from": "bool isNumb",
            "input": "bool isNumb",
            "to": "bool isNumbe"
        },
        {
            "from": "bool isNumbe",
            "input": "bool isNumbe",
            "to": "bool isNumber"
        },
        {
            "from": "bool isNumber",
            "input": "bool isNumber",
            "to": "bool isNumber("
        },
        {
            "from": "bool isNumber(",
            "input": "bool isNumber(",
            "to": "bool isNumber(c"
        },
        {
            "from": "bool isNumber(c",
            "input": "bool isNumber(c",
            "to": "bool isNumber(co"
        },
        {
            "from": "bool isNumber(co",
            "input": "bool isNumber(co",
            "to": "bool isNumber(con"
        },
        {
            "from": "bool isNumber(con",
            "input": "bool isNumber(con",
            "to": "bool isNumber(cons"
        },
        {
            "from": "bool isNumber(cons",
            "input": "bool isNumber(cons",
            "to": "bool isNumber(const"
        },
        {
            "from": "bool isNumber(const",
            "input": "bool isNumber(const",
            "to": "bool isNumber(const "
        },
        {
            "from": "bool isNumber(const ",
            "input": "bool isNumber(const ",
            "to": "bool isNumber(const s"
        },
        {
            "from": "bool isNumber(const s",
            "input": "bool isNumber(const s",
            "to": "bool isNumber(const st"
        },
        {
            "from": "bool isNumber(const st",
            "input": "bool isNumber(const st",
            "to": "bool isNumber(const str"
        },
        {
            "from": "bool isNumber(const str",
            "input": "bool isNumber(const str",
            "to": "bool isNumber(const stri"
        },
        {
            "from": "bool isNumber(const stri",
            "input": "bool isNumber(const stri",
            "to": "bool isNumber(const strin"
        },
        {
            "from": "bool isNumber(const strin",
            "input": "bool isNumber(const strin",
            "to": "bool isNumber(const string"
        },
        {
            "from": "bool isNumber(const string",
            "input": "bool isNumber(const string",
            "to": "bool isNumber(const string "
        },
        {
            "from": "bool isNumber(const string ",
            "input": "bool isNumber(const string ",
            "to": "bool isNumber(const string &"
        },
        {
            "from": "bool isNumber(const string &",
            "input": "bool isNumber(const string &",
            "to": "bool isNumber(const string &s"
        },
        {
            "from": "bool isNumber(const string &s",
            "input": "bool isNumber(const string &s",
            "to": "bool isNumber(const string &st"
        },
        {
            "from": "bool isNumber(const string &st",
            "input": "bool isNumber(const string &st",
            "to": "bool isNumber(const string &str"
        },
        {
            "from": "bool isNumber(const string &str",
            "input": "bool isNumber(const string &str",
            "to": "bool isNumber(const string &str)"
        },
        {
            "from": "bool isNumber(const string &str)",
            "input": "bool isNumber(const string &str)",
            "to": "bool isNumber(const string &str);"
        },
        {
            "from": "c",
            "input": "c",
            "to": "cl"
        },
        {
            "from": "cl",
            "input": "cl",
            "to": "cla"
        },
        {
            "from": "cla",
            "input": "cla",
            "to": "clas"
        },
        {
            "from": "clas",
            "input": "clas",
            "to": "class"
        },
        {
            "from": "class",
            "input": "class",
            "to": "class "
        },
        {
            "from": "class ",
            "input": "class ",
            "to": "class S"
        },
        {
            "from": "class S",
            "input": "class S",
            "to": "class Sh"
        },
        {
            "from": "class Sh",
            "input": "class Sh",
            "to": "class She"
        },
        {
            "from": "class She",
            "input": "class She",
            "to": "class Shel"
        },
        {
            "from": "class Shel",
            "input": "class Shel",
            "to": "class Shell"
        },
        {
            "from": "class Shell",
            "input": "class Shell",
            "to": "class Shell "
        },
        {
            "from": "class Shell ",
            "input": "class Shell ",
            "to": "class Shell {"
        },
        {
            "from": "p",
            "input": "p",
            "to": "pu"
        },
        {
            "from": "pr",
            "input": "pr",
            "to": "pri"
        },
        {
            "from": "pri",
            "input": "pri",
            "to": "priv"
        },
        {
            "from": "priv",
            "input": "priv",
            "to": "priva"
        },
        {
            "from": "priva",
            "input": "priva",
            "to": "privat"
        },
        {
            "from": "privat",
            "input": "privat",
            "to": "private"
        },
        {
            "from": "private",
            "input": "private",
            "to": "private:"
        },
        {
            "from": "pu",
            "input": "pu",
            "to": "pub"
        },
        {
            "from": "pub",
            "input": "pub",
            "to": "publ"
        },
        {
            "from": "publ",
            "input": "publ",
            "to": "publi"
        },
        {
            "from": "publi",
            "input": "publi",
            "to": "public"
        },
        {
            "from": "public",
            "input": "public",
            "to": "public:"
        },
        {
            "from": "}",
            "input": "}",
            "to": "};"
        }
    ],
    "type": ""
}
